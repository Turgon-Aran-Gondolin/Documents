(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    187410,       3729]
NotebookOptionsPosition[    184710,       3643]
NotebookOutlinePosition[    185083,       3659]
CellTagsIndexPosition[    185040,       3656]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]a", "[", "r_", "]"}], "=", 
   FractionBox[
    SuperscriptBox["E", 
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox["r", "2"]}], 
      RowBox[{"2", 
       SuperscriptBox["a", "2"]}]]], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"2", "\[Pi]"}], ")"}], 
      FractionBox["3", "2"]], 
     SuperscriptBox["a", "3"]}]]}], ";", 
  RowBox[{"\[Alpha]", "=", "0.1"}], ";", 
  RowBox[{"u0", "=", 
   SuperscriptBox["10", 
    RowBox[{"-", "20"}]]}], ";", 
  RowBox[{"\[Delta]start", "=", 
   SuperscriptBox["10", 
    RowBox[{"-", "10"}]]}], ";", 
  RowBox[{"m", "=", "10"}], ";", 
  RowBox[{"\[Alpha]Sch", "=", 
   RowBox[{"2", "m"}]}], ";", 
  RowBox[{"ee", "=", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["10", 
      RowBox[{"-", "10"}]], ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "5"}]], ",", "0.001", ",", "0.003", ",", "0.007", ",", 
     "0.01", ",", "0.03", ",", "0.07", ",", "0.1", ",", "0.3", ",", "0.7", 
     ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vs1", "[", 
    RowBox[{"r_", ",", "a_", ",", "c1_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", " ", 
      FractionBox["\[Alpha]", "r"]}], 
     RowBox[{"Erf", "[", 
      FractionBox["r", 
       RowBox[{
        SqrtBox["2"], "a"}]], "]"}]}], "+", 
    RowBox[{"c1", " ", 
     SuperscriptBox["a", "2"], 
     RowBox[{"\[Delta]a", "[", "r", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vs2", "[", 
    RowBox[{"r_", ",", "a_", ",", 
     RowBox[{"{", 
      RowBox[{"c2_", ",", "d1_"}], "}"}]}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", " ", 
        FractionBox["1", "#"]}], 
       RowBox[{"Erf", "[", 
        FractionBox["#", 
         RowBox[{
          SqrtBox["2"], "a"}]], "]"}]}], "+", 
      RowBox[{"c2", " ", 
       SuperscriptBox["a", "2"], 
       RowBox[{"\[Delta]a", "[", "#", "]"}]}], "+", 
      RowBox[{"d1", " ", 
       SuperscriptBox["a", "4"], 
       RowBox[{"Laplacian", "[", 
        RowBox[{
         RowBox[{"\[Delta]a", "[", "#", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"#", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
         "\"\<Spherical\>\""}], "]"}]}]}], "&"}], "[", "r", "]"}]}], ";", 
  RowBox[{
   RowBox[{"V", "[", "r_", "]"}], "=", 
   FractionBox[
    RowBox[{"-", "\[Alpha]"}], "r"]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.666417486872492*^9, 3.666417488262471*^9}, {
   3.666417537666355*^9, 3.6664175483018646`*^9}, {3.666417585757308*^9, 
   3.6664176151340513`*^9}, {3.666417684010681*^9, 3.6664176888130713`*^9}, {
   3.6664178590972996`*^9, 3.6664178812579565`*^9}, {3.666424795562386*^9, 
   3.6664247978790216`*^9}, 3.666566022153719*^9, {3.666567146905137*^9, 
   3.66656717365539*^9}, 3.666573386147797*^9, {3.6666477443894653`*^9, 
   3.6666477536820345`*^9}, {3.6666483012032757`*^9, 3.666648301417427*^9}, {
   3.6666743489053583`*^9, 3.666674351470173*^9}, {3.6666867187360544`*^9, 
   3.666686729979374*^9}, 3.66677510924329*^9, 3.6667773091778197`*^9, {
   3.6668407102990923`*^9, 3.666840712978998*^9}, 3.6668408054151573`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RS", "[", 
    RowBox[{"n_", ",", "r_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     FractionBox["2", 
      RowBox[{
       SuperscriptBox["A", 
        FractionBox["3", "2"]], " ", 
       SuperscriptBox["n", 
        RowBox[{"3", "/", "2"}]]}]], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox["r", 
        RowBox[{"n", " ", "A"}]]}]], " ", 
     RowBox[{"Hypergeometric1F1", "[", 
      RowBox[{
       RowBox[{"1", "-", "n"}], ",", "2", ",", 
       FractionBox[
        RowBox[{"2", " ", "r"}], 
        RowBox[{"n", " ", "A"}]]}], "]"}]}], "/.", 
    RowBox[{"A", "\[Rule]", 
     RowBox[{"Rationalize", "@", 
      FractionBox["1", 
       RowBox[{"m", " ", "\[Alpha]"}]]}]}]}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"RS", "[", 
    RowBox[{"1", ",", "r"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.667092832054419*^9, 3.667092873132865*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
9jYFFdl/0Xs188D/AIqRYU0=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {0., 1.9999995918367763`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6670928463826437`*^9, 3.6670928736328773`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", "0.1"}], ";", 
  RowBox[{"c1", "=", 
   RowBox[{
   "-", "0.6920274738976314732177964055293016755399639637002775488555356459694\
7153122297`50."}]}], ";"}]], "Input",
 CellChangeTimes->{{3.667085165203434*^9, 3.667085181594243*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"EigenEnergy", "[", 
   RowBox[{"V_", ",", "\[Alpha]Sch_", ",", 
    RowBox[{"{", 
     RowBox[{"min_", ",", "max_"}], "}"}], ",", 
    RowBox[{"{", "opt1___", "}"}], ",", 
    RowBox[{"{", "opt2___", "}"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sol", ",", "ef", ",", "evShifted", ",", "evnew", ",", 
      RowBox[{"steps", "=", "\[Infinity]"}], ",", "time1", ",", "time2"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PrintTemporary", "[", "V", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"shift", "=", "10"}], ",", 
           RowBox[{"d", "=", "1000"}], ",", 
           RowBox[{"n", "=", "20"}], ",", "ev"}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"ev", ",", "ef"}], "}"}], "=", 
           RowBox[{"NDEigensystem", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"shift", " ", 
                 RowBox[{"f", "[", "r", "]"}]}], "+", 
                RowBox[{"V", " ", 
                 RowBox[{"f", "[", "r", "]"}]}], "-", 
                RowBox[{
                 RowBox[{"1", "/", "\[Alpha]Sch"}], " ", 
                 RowBox[{
                  RowBox[{"f", "''"}], "[", "r", "]"}]}]}], 
               RowBox[{"(*", 
                RowBox[{"+", 
                 RowBox[{"NeumannValue", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{"r", "\[Equal]", "d"}]}], "]"}]}], "*)"}], ",", 
               RowBox[{"DirichletCondition", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"f", "[", "r", "]"}], "\[Equal]", "0"}], ",", 
                 "True"}], "]"}]}], "}"}], ",", 
             RowBox[{"f", "[", "r", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"r", ",", "0", ",", "d"}], "}"}], ",", "n", ",", 
             RowBox[{"Method", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\"\<SpatialDiscretization\>\"", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<FiniteElement\>\"", ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\<MeshOptions\>\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<MaxCellMeasure\>\"", "\[Rule]", "0.05"}], 
                    "}"}]}], "}"}]}], "}"}]}], ",", 
                RowBox[{"\"\<Eigensystem\>\"", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Arnoldi\>\"", ",", 
                   RowBox[{"MaxIterations", "->", "Infinity"}]}], "}"}]}]}], 
               "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"evShifted", "=", 
           RowBox[{"ev", "-", "shift"}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", "evShifted", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"sol", "=", 
      RowBox[{"ParametricNDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"V", " ", 
             RowBox[{"u", "[", "r", "]"}]}], "-", 
            RowBox[{
             RowBox[{"1", "/", "\[Alpha]Sch"}], " ", 
             RowBox[{
              RowBox[{"u", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
           RowBox[{"e", " ", 
            RowBox[{"u", "[", "r", "]"}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"u", "'"}], "[", "max", "]"}], "\[Equal]", 
           RowBox[{"-", "min"}]}], ",", 
          RowBox[{
           RowBox[{"u", "[", "max", "]"}], "\[Equal]", "min"}]}], "}"}], ",", 
        "u", ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "min", ",", "max"}], "}"}], ",", "e", ",", 
        RowBox[{"MaxSteps", "\[Rule]", "steps"}], ",", "opt1"}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"evnew", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"e", "/.", "#"}], "&"}], "/@", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"PrintTemporary", "[", "n", "]"}], ";", 
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"u", "[", "e", "]"}], "[", "min", "]"}], "\[Equal]", 
              "0"}], "/.", "sol"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"e", ",", 
                RowBox[{"0.99", " ", 
                 RowBox[{"SetPrecision", "[", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], ",", "3"}], "]"}]}], ",", 
                RowBox[{"1.01", " ", 
                 RowBox[{"SetPrecision", "[", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "n", "]"}], "]"}], ",", "3"}], "]"}]}]}], 
               "}"}], "&"}], "[", "Table20REE", "]"}], ",", "opt2"}], 
           RowBox[{"(*", 
            RowBox[{",", 
             RowBox[{"StepMonitor", "\[RuleDelayed]", 
              RowBox[{"PrintTemporary", "[", "e", "]"}]}]}], "*)"}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "20"}], "}"}]}], "]"}]}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]50e", "[", 
   RowBox[{"en_", ",", "V_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sol", ",", "\[Delta]s", ",", "\[Delta]r", ",", 
      RowBox[{"r1", "=", "50"}], ",", 
      RowBox[{"r2", "=", "u0"}], ",", "\[Beta]", ",", "jder", ",", "nder", 
      ",", "k", ",", 
      RowBox[{"wpc", "=", "50"}], ",", 
      RowBox[{"prc", "=", "20"}], ",", "time1", ",", "time2"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"time1", "=", 
      RowBox[{"SessionTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"k", "=", 
      SqrtBox[
       RowBox[{"2", "en"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Beta]", ":=", 
      RowBox[{
       RowBox[{"r1", " ", 
        FractionBox[
         RowBox[{
          RowBox[{"u", "'"}], "[", "r1", "]"}], 
         RowBox[{"u", "[", "r1", "]"}]]}], "-", "1"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"jder", "[", "r_", "]"}], "=", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"SphericalBesselJ", "[", 
         RowBox[{"0", ",", "r"}], "]"}], ",", "r"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nder", "[", "r_", "]"}], "=", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"SphericalBesselY", "[", 
         RowBox[{"0", ",", "r"}], "]"}], ",", "r"}], "]"}]}], ";", 
     RowBox[{"sol", "=", 
      RowBox[{"Flatten", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"u", "''"}], "[", "r", "]"}], "+", 
             RowBox[{"\[Alpha]Sch", 
              RowBox[{"(", 
               RowBox[{"en", "-", "V"}], ")"}], 
              RowBox[{"u", "[", "r", "]"}]}]}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"u", "'"}], "[", "r2", "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{
            RowBox[{"u", "[", "r2", "]"}], "\[Equal]", "u0"}]}], "}"}], ",", 
         "u", ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "r1", ",", "r2"}], "}"}], ",", 
         RowBox[{"PrecisionGoal", "\[Rule]", "prc"}], ",", 
         RowBox[{"WorkingPrecision", "\[Rule]", "wpc"}], ",", " ", 
         RowBox[{"MaxSteps", "\[Rule]", "Infinity"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "All"}], ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Shooting\>\"", ",", 
            RowBox[{"\"\<StartingInitialConditions\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"u", "[", "r2", "]"}], "\[Equal]", "u0"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"u", "'"}], "[", "r2", "]"}], "\[Equal]", "1"}]}], 
              "}"}]}]}], "}"}]}]}], 
        RowBox[{"(*", 
         RowBox[{",", 
          RowBox[{"SolveDelayed", "\[Rule]", "True"}]}], "*)"}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]s", "=", 
      RowBox[{"FindRoot", "[", 
       RowBox[{"(*", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"u", "'"}], "[", "r1", "]"}], 
          RowBox[{"u", "[", "r1", "]"}]], "\[Equal]", 
         RowBox[{"k", " ", 
          RowBox[{"Cot", "[", 
           RowBox[{
            RowBox[{"k", " ", "r1"}], "+", "\[Delta]"}], "]"}]}]}], "*)"}], 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Tan", "[", "\[Delta]", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"k", " ", "r1", " ", 
             RowBox[{"jder", "[", 
              RowBox[{"k", " ", "r1"}], "]"}]}], "-", 
            RowBox[{"\[Beta]", " ", 
             RowBox[{"SphericalBesselJ", "[", 
              RowBox[{"0", ",", 
               RowBox[{"k", " ", "r1"}]}], "]"}]}]}], 
           RowBox[{
            RowBox[{"k", " ", "r1", " ", 
             RowBox[{"nder", "[", 
              RowBox[{"k", " ", "r1"}], "]"}]}], "-", 
            RowBox[{"\[Beta]", " ", 
             RowBox[{"SphericalBesselY", "[", 
              RowBox[{"0", ",", 
               RowBox[{"k", " ", "r1"}]}], "]"}]}]}]]}], "/.", "sol"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Delta]", ",", "0"}], "}"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "wpc"}], ",", 
        RowBox[{"PrecisionGoal", "\[Rule]", "prc"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Delta]r", "=", 
      RowBox[{"\[Delta]", "/.", "\[Delta]s"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"time2", "=", 
      RowBox[{"SessionTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<End with \>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"time2", "-", "time1"}], "]"}], "<>", "\"\<s\>\""}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"\[Delta]r", "=", 
      RowBox[{"NestWhile", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Sign", "[", "#", "]"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", "#", "]"}], "-", "\[Pi]"}], ")"}]}], "&"}], 
        ",", "\[Delta]r", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", "#", "]"}], ">", 
          FractionBox["\[Pi]", "2"]}], "&"}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]50", "[", "V_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "en", ",", "len", ",", "\[Delta]en", ",", "timestampa", ",", 
      "timestampb"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"len", "=", 
      RowBox[{"Length", "@", "ee"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"timestampa", "=", 
         RowBox[{"SessionTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"en", "=", 
         RowBox[{"ee", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Delta]en", "=", 
         RowBox[{"\[Delta]50e", "[", 
          RowBox[{"en", ",", "V"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"timestampb", "=", 
         RowBox[{"SessionTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"en", ",", "\[Delta]en"}], "}"}], ",", "\"\<    \>\"", ",", 
          RowBox[{"timestampb", "-", "timestampa"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[Delta]en"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "2", ",", "len"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Eigenfun", "[", 
   RowBox[{"V_", ",", "enelist_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"r1", "=", "2000"}], ",", 
            RowBox[{"r2", "=", 
             RowBox[{"1.", "*", 
              SuperscriptBox["10", 
               RowBox[{"-", "50"}]]}]}]}], "}"}], ",", 
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"V", " ", 
                 RowBox[{"f", "[", "r", "]"}]}], "-", 
                RowBox[{
                 RowBox[{"1", "/", "\[Alpha]Sch"}], " ", 
                 RowBox[{
                  RowBox[{"f", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
               RowBox[{"#", " ", 
                RowBox[{"f", "[", "r", "]"}]}]}], ",", 
              RowBox[{
               RowBox[{"f", "[", "r1", "]"}], "\[Equal]", "r2"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"f", "'"}], "[", "r1", "]"}], "\[Equal]", 
               RowBox[{"-", "r2"}]}]}], "}"}], ",", "f", ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "r1", ",", "r2"}], "}"}], ",", 
            RowBox[{"WorkingPrecision", "\[Rule]", "50"}], ",", 
            RowBox[{"AccuracyGoal", "\[Rule]", "30"}], ",", 
            RowBox[{"PrecisionGoal", "\[Rule]", "15"}], ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "All"}], ",", 
            RowBox[{"MaxSteps", "\[Rule]", "Infinity"}], ",", 
            RowBox[{"MaxStepSize", "\[Rule]", "0.01"}], ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<Shooting\>\"", ",", 
               RowBox[{"\"\<StartingInitialConditions\>\"", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"f", "'"}], "[", "r2", "]"}], "\[Equal]", "1"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"f", "[", "r2", "]"}], "\[Equal]", "r2"}]}], 
                 "}"}]}]}], "}"}]}]}], "]"}]}], "]"}], "&"}], "/@", 
       "enelist"}], ",", "2"}], "]"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.666417373753624*^9, 3.6664173791544375`*^9}, {
   3.666417802039014*^9, 3.6664178166012964`*^9}, 3.6664757004920883`*^9, {
   3.666501266761839*^9, 3.6665013312693853`*^9}, {3.666510502208707*^9, 
   3.666510573060545*^9}, {3.6665106362904396`*^9, 3.6665106799050555`*^9}, {
   3.6665218088040285`*^9, 3.666521812413436*^9}, {3.6665633342236495`*^9, 
   3.6665633422549744`*^9}, {3.6666467781952343`*^9, 3.666646793914403*^9}, {
   3.6666475138552003`*^9, 3.6666475171989822`*^9}, {3.666649289994234*^9, 
   3.666649316980308*^9}, {3.666676170118725*^9, 3.6666761749625163`*^9}, {
   3.666682632874029*^9, 3.6666826570151143`*^9}, {3.6666869439364667`*^9, 
   3.6666870334810276`*^9}, 3.6666870896252766`*^9, {3.6666881714156904`*^9, 
   3.6666881714755907`*^9}, {3.6666882036739388`*^9, 3.6666882630511928`*^9}, 
   3.666690129039649*^9, {3.666690278248773*^9, 3.6666903366130366`*^9}, 
   3.666691937383771*^9, 3.666694723967981*^9, 3.6666950807435417`*^9, {
   3.666732715302289*^9, 3.6667327292946377`*^9}, {3.6667373104968247`*^9, 
   3.666737341903592*^9}, 3.6667374388426294`*^9, {3.666748443354139*^9, 
   3.6667484880917606`*^9}, {3.6667485368745165`*^9, 3.666748548317691*^9}, {
   3.6667485800794*^9, 3.666748658462243*^9}, {3.6667490000430093`*^9, 
   3.666749053055306*^9}, {3.666749087596133*^9, 3.66674908874795*^9}, {
   3.6667491292737026`*^9, 3.666749161891721*^9}, {3.6667492347858353`*^9, 
   3.6667492553052664`*^9}, {3.6667494409221516`*^9, 
   3.6667494419519453`*^9}, {3.6668369424079247`*^9, 
   3.6668369501191993`*^9}, {3.6668372966103487`*^9, 
   3.6668373460483427`*^9}, {3.666837449846157*^9, 3.666837450283661*^9}, 
   3.6668376534214144`*^9, 3.666837868335187*^9, 3.6668408406777973`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RealEigenEnergy", "[", "n_", "]"}], "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"m", " ", 
      SuperscriptBox["\[Alpha]", "2"]}], 
     RowBox[{"2", 
      SuperscriptBox["n", "2"]}]]}]}], ";"}], "\n", 
 RowBox[{"Table20REE", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RealEigenEnergy", "[", "n", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "30"}], "}"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.666688591266756*^9, 3.6666886210456066`*^9}, {
   3.6666886741952395`*^9, 3.6666886791668997`*^9}, {3.666688892862154*^9, 
   3.666688902843853*^9}, 3.6666889704967747`*^9, 3.6667488610076027`*^9, 
   3.6667730647922926`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.05000000000000001`"}], ",", 
   RowBox[{"-", "0.012500000000000002`"}], ",", 
   RowBox[{"-", "0.005555555555555557`"}], ",", 
   RowBox[{"-", "0.0031250000000000006`"}], ",", 
   RowBox[{"-", "0.0020000000000000005`"}], ",", 
   RowBox[{"-", "0.0013888888888888892`"}], ",", 
   RowBox[{"-", "0.0010204081632653062`"}], ",", 
   RowBox[{"-", "0.0007812500000000002`"}], ",", 
   RowBox[{"-", "0.000617283950617284`"}], ",", 
   RowBox[{"-", "0.0005000000000000001`"}], ",", 
   RowBox[{"-", "0.00041322314049586787`"}], ",", 
   RowBox[{"-", "0.0003472222222222223`"}], ",", 
   RowBox[{"-", "0.00029585798816568053`"}], ",", 
   RowBox[{"-", "0.00025510204081632655`"}], ",", 
   RowBox[{"-", "0.00022222222222222226`"}], ",", 
   RowBox[{"-", "0.00019531250000000004`"}], ",", 
   RowBox[{"-", "0.00017301038062283742`"}], ",", 
   RowBox[{"-", "0.000154320987654321`"}], ",", 
   RowBox[{"-", "0.00013850415512465378`"}], ",", 
   RowBox[{"-", "0.00012500000000000003`"}], ",", 
   RowBox[{"-", "0.00011337868480725626`"}], ",", 
   RowBox[{"-", "0.00010330578512396697`"}], ",", 
   RowBox[{"-", "0.00009451795841209832`"}], ",", 
   RowBox[{"-", "0.00008680555555555557`"}], ",", 
   RowBox[{"-", "0.00008000000000000002`"}], ",", 
   RowBox[{"-", "0.00007396449704142013`"}], ",", 
   RowBox[{"-", "0.00006858710562414266`"}], ",", 
   RowBox[{"-", "0.00006377551020408164`"}], ",", 
   RowBox[{"-", "0.000059453032104637343`"}], ",", 
   RowBox[{"-", "0.000055555555555555565`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.667089514417452*^9}]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigenfunsin", "[", 
   RowBox[{"V_", ",", "ene_", ",", "rr_", ",", 
    RowBox[{"{", 
     RowBox[{"r1_", ",", "r2_"}], "}"}], ",", "opt___"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"efunction", ",", "amplitude"}], "}"}], ",", 
    RowBox[{
     RowBox[{"efunction", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"NDSolve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"V", " ", 
               RowBox[{"f", "[", "r", "]"}]}], "-", 
              RowBox[{
               RowBox[{"1", "/", "\[Alpha]Sch"}], " ", 
               RowBox[{
                RowBox[{"f", "''"}], "[", "r", "]"}]}]}], "\[Equal]", 
             RowBox[{"ene", " ", 
              RowBox[{"f", "[", "r", "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"f", "[", "r1", "]"}], "\[Equal]", "r2"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"f", "'"}], "[", "r1", "]"}], "\[Equal]", 
             RowBox[{"-", "r2"}]}]}], "}"}], ",", "f", ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "r1", ",", "r2"}], "}"}], ",", "opt", ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Shooting\>\"", ",", 
             RowBox[{"\"\<StartingInitialConditions\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"f", "'"}], "[", "r2", "]"}], "\[Equal]", "1"}], 
                ",", 
                RowBox[{
                 RowBox[{"f", "[", "r2", "]"}], "\[Equal]", "r2"}]}], 
               "}"}]}]}], "}"}]}]}], "]"}], ",", "2"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"amplitude", "=", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"f", "[", "r", "]"}], "2"], "/.", "#"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "r2", ",", "r1"}], "}"}]}], "]"}], 
         RowBox[{"-", "0.5"}]], "&"}], "/@", "efunction"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"amplitude", " ", 
       RowBox[{"f", "[", "rr", "]"}]}], "/.", "efunction"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.666521787631962*^9, 3.6665218555856996`*^9}, {
  3.666521908851806*^9, 3.666522004649561*^9}, {3.6670867218623767`*^9, 
  3.6670867481438437`*^9}, {3.66708944618777*^9, 3.6670894479440093`*^9}, {
  3.6670895703241744`*^9, 3.667089571183543*^9}, {3.667089617387048*^9, 
  3.66708961834023*^9}, {3.6670920224896145`*^9, 3.6670920269427767`*^9}, {
  3.6670982161413097`*^9, 3.6670982729386835`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Matrix element ",
 Cell[BoxData[
  FormBox[
   RowBox[{"<", 
    SuperscriptBox["p", "4"], ">"}], TraditionalForm]]]
}], "Section",
 CellChangeTimes->{{3.666425611553506*^9, 3.6664256176007743`*^9}, {
  3.6665213443623323`*^9, 3.6665213536592913`*^9}}],

Cell[BoxData[
 RowBox[{"Get", "[", 
  "\"\<C:\\\\Users\\\\ASUS\\\\Documents\\\\DataDump_Coulomb_7_energyVs1_2nd.\
mx\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.667085255532319*^9, 3.6670852913607693`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"AbsoluteTiming", "@", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", "=", "20"}], "}"}], ",", 
    RowBox[{
     RowBox[{"ef", "=", 
      RowBox[{"First", "@", 
       RowBox[{"Eigenfunsin", "[", 
        RowBox[{
         RowBox[{"V", "[", "r", "]"}], ",", 
         RowBox[{"Table20REE", "[", 
          RowBox[{"[", "n", "]"}], "]"}], ",", "r", ",", 
         RowBox[{"{", 
          RowBox[{"4000", ",", 
           RowBox[{"1.", "*", 
            SuperscriptBox["10", 
             RowBox[{"-", "50"}]]}]}], "}"}], ",", 
         RowBox[{"WorkingPrecision", "\[Rule]", "50"}], ",", 
         RowBox[{"PrecisionGoal", "\[Rule]", "20"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "All"}], ",", 
         RowBox[{"MaxSteps", "\[Rule]", "Infinity"}], ",", 
         RowBox[{"MaxStepFraction", "\[Rule]", 
          SuperscriptBox["10", 
           RowBox[{"-", "4"}]]}]}], "]"}]}]}], ";", 
     RowBox[{"ef", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OddQ", "[", "n", "]"}], ",", "ef", ",", 
        RowBox[{"-", "ef"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"GraphicsGrid", "@", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"ef", ",", 
             RowBox[{"r", " ", 
              RowBox[{"RS", "[", 
               RowBox[{"n", ",", "r"}], "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "0", ",", "4000"}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"ef", "-", 
             RowBox[{"r", " ", 
              RowBox[{"RS", "[", 
               RowBox[{"n", ",", "r"}], "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "0", ",", "4000"}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "}"}], 
       "}"}]}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"D", "[", 
     RowBox[{"ef", ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "2"}], "}"}]}], "]"}], "2"], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     RowBox[{"1.", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "50"}]]}], ",", "4000"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.667085215953851*^9, 3.6670852378915434`*^9}, {
   3.667085295970179*^9, 3.667085311954653*^9}, {3.6670867348468585`*^9, 
   3.667086746175043*^9}, {3.667089403589031*^9, 3.667089423455062*^9}, {
   3.6670894843570585`*^9, 3.6670894964665184`*^9}, {3.6670895340894976`*^9, 
   3.6670895462615128`*^9}, {3.667089600277581*^9, 3.6670896021525497`*^9}, {
   3.6670919830048656`*^9, 3.6670919856611376`*^9}, {3.667092018020795*^9, 
   3.6670920455210533`*^9}, {3.6670927348169193`*^9, 
   3.6670928132574224`*^9}, {3.6670928834142313`*^9, 
   3.6670929881026077`*^9}, {3.6670930346967397`*^9, 
   3.6670930549312315`*^9}, {3.667093424387391*^9, 3.667093701436548*^9}, {
   3.6670937757809496`*^9, 3.667093822281312*^9}, {3.667094978828583*^9, 
   3.667095117017183*^9}, {3.6670964528236246`*^9, 3.6670965852778363`*^9}, {
   3.6670966440305843`*^9, 3.6670966480618687`*^9}, {3.667096702795224*^9, 
   3.6670967453580737`*^9}, {3.667096874046632*^9, 3.6670968867654524`*^9}, {
   3.667097035844797*^9, 3.6670970473605165`*^9}, 3.6670970782670107`*^9, {
   3.6670971374237933`*^9, 3.667097246192199*^9}, {3.6670972763486958`*^9, 
   3.6670973027707825`*^9}, {3.6670977843096704`*^9, 3.6670978131223736`*^9}, 
   3.667097987842559*^9, {3.667098199703707*^9, 3.667098202891189*^9}, {
   3.667098256641624*^9, 3.667098283407483*^9}, {3.667098527344206*^9, 
   3.6670985407326665`*^9}, {3.667098582440098*^9, 3.667098617532301*^9}, 
   3.6670987022205315`*^9, 3.6670988681461782`*^9, {3.667099690009415*^9, 
   3.6670996971657076`*^9}, 3.6671095053192296`*^9, {3.6671095398351407`*^9, 
   3.667109565382221*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "precw"}], "MessageName"], ":", 
  " ", "\<\"The precision of the differential equation \
(\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{\\\"-\\\", FractionBox[RowBox[{\\\"0.1`\\\", \
\\\" \\\", RowBox[{\\\"f\\\", \\\"[\\\", \\\"r\\\", \\\"]\\\"}]}], \
\\\"r\\\"]}], \\\"-\\\", FractionBox[RowBox[{SuperscriptBox[\\\"f\\\", \\\"\
\[Prime]\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \\\"r\\\", \
\\\"]\\\"}], \\\"20\\\"]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.00012500000000000003`\\\"}], \\\" \\\", RowBox[{\\\"f\\\", \\\"[\\\", \
\\\"r\\\", \\\"]\\\"}]}]}], \\\",\\\", RowBox[{RowBox[{\\\"f\\\", \\\"[\\\", \
\\\"4000\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \
\\\"9.999999999999999`*^-51\\\"}], \\\",\\\", RowBox[{RowBox[{SuperscriptBox[\
\\\"f\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"4000\\\", \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"-\\\", \
\\\"9.999999999999999`*^-51\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"}\\\"}]}], \\\"}\\\"}]\\)\[NoBreak]) is less than WorkingPrecision (\
\[NoBreak]\\!\\(\\*RowBox[{\\\"50.`\\\"}]\\)\[NoBreak]). \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/precw\\\", \
ButtonNote -> \\\"NDSolve::precw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6670967092014923`*^9, 3.6670967461080317`*^9}, {
   3.6670968745309725`*^9, 3.667096887218582*^9}, {3.6670970504230413`*^9, 
   3.6670970787357802`*^9}, {3.667097137830014*^9, 3.6670972766767874`*^9}, {
   3.6670977847314987`*^9, 3.667097814341117*^9}, 3.6670979882800493`*^9, 
   3.667098283735614*^9, {3.6670985282478447`*^9, 3.6670986179229336`*^9}, 
   3.6670987027986317`*^9, 3.6670988685367756`*^9, 3.667099698165715*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.588499371864454`", ",", 
   GraphicsBox[{{}, {InsetBox[
       GraphicsBox[{{{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
           Opacity[1.], LineBox[CompressedData["
1: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
73202txM9f8/r0C91E+zdDRptIdtW2Y=
            "]]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
           Opacity[1.], LineBox[CompressedData["
1:eJwUV3c4lu8XJ0LSEAplJklWUsZXnhMqykp29i6y995krxev114hs6TI89zJ
poQmIStlhDJa6Of31319rnPO55z7nPs+1zl8ls7aNruoqKikaKmo/n8u/NhU
u2zLhiWzVgfI5RMK/WUMgsqFq9iPuLF903Ue2BumAEOOQhooeoNcLB080cXO
1fxk133AmDzFJuAcid6jc6s0hSygMnbhiKdpMErMcc3A7rLDVISBZdh3UaTs
Wy3r78oFvE/Ets/7BGHblR5OH0X4oOTyN2oG9ruYIfkQ/C44DtT3/PmEImOx
hug65iNsgmDMNiGVyhKBHfTSmJa6KwQsP6M/78lywRysFxu0t4RBqvShdieN
LerUjo1ycRWFEZmwtq5TYYjvopBB4mdxmKHP6xlXikPEkWnWdyJnwDJKmSXu
VhJa3P9ga8ZWEniy2TcssETESRc6u1pwFjhL8vmS1GOQypbmq10fpUCX77+J
3NBA5LnG/YSZ7Tyc3R993o7DEBUtfCvg1ZQGh2GZF9qvXLGBqZa74ndloJpZ
POnzSDi2PRznptAmC9EWinObvvGYyKDRTfUtOQgXs2heXkvGjLpPKRtLy4Pb
iSHNkLEULBr9EnFwvQDvjDJqL64mYw2NXWx+9xXAT3mFLqE1HpuqztiO+YzB
m6+NrzfmIrCYoQerfUkAdVKruZ9MvTAeDU771yIX4e/NWJfcZTGssSd0dKTn
IljQTrDYRHsgtUtzWlO2ivCe6VyI5ZkINP1Mq2OORgnUFOeYDZPikZ/8E9nv
BUrQVtgjK2iTgpif8NT8uqAMf7/6XDgKaaj8bDQ/1UdleL5os1+tNQ0p1C5l
0PtcgkGT6SNe86norbDe3gNsl0HcOb3wz+tk5FiGBx9+cBkOvPqtVKEdh3bx
n1jj0rwCn9//TAtXDUfk3Hj7E4tX4KNz6LfNUx5IgmNtVOSuCszcS35b/YsP
daXfvC4lqAquhXmqv1ncMdODbR3/tanC2iLjL743Ydh6nLCckvlVOD94hiuK
PQ6Lp0+tubp1FWSWhWbzN5Kx4+G/+bWzr4HIRVY51ZA0rHnbPNNQWg32feYr
q91HwrT8uvdavFGDDOKjP20KCfuyLh5i76oOG++Hn63vIWFBrplrzvs1APYe
6eiLSMNYv23be9/XgF9+c0K0HCnYfXvbsSAVTYjn59NgfhWHKc68vB71WRPO
HhzRvXgmAlus5Zy+fFEL+iueLC3bemNP7mjk9iZpgXTv95siD3UxzblHzEMi
12Fj32owyTsIcd6b69P1vw72f7ZVDX2i0aw1V9Rwz3Ug8iNPzfQkonr+62DC
rg1KQqNCt71SUcBExJ8JW22wY62bRG/TkUrekwbrR9qgdWKX2EPnDMRivOj0
leYG7P3k1j4jk4nGOXhPOWrfgAPN74Zfi2aiyvc3ppcLboDeHenidO0MxJv5
4Nr+jRuw/8Pr7N6odJShx9wgck0Hgp8YRNHPpyCmwy7HrhXowIuvlr90pRJQ
2Nv+iFvrOsDyClX2ekaiX+mi36Kv6sJN6sw/FwZ8kZNOvG5Zvi4IKx5KDP9n
igxfqwpOq+pBtCSrSXZKANafWp5Ina8HdBdqLj1sj8KUtel/8qzpgfiHK3uU
vBOxZmZbMwVVfXg9VV18MzkVkxhs7zLO04cTNs8zjl0mYWXJxyX8V/UhIWnf
YIJKJnZMKyyLrGIAPLMW/v13s7DUA5NUT3INoKpOczprFxljeIXdevfDAPic
VKklHmRhQYl5g2tXDGFP9JknHHmZ2Jr6lixLriHwhmZ23R8kYbf3GRed+WEI
FGNqezeTNOzTi2ZGrStGkE9S6fPWS8Z04jncnXKMQGl8uOtr5V2s95rPx/jv
RvDzrSD2aSEUa+w9V9VDuQljqi+papQUMZHYdNavKzdholKApr7iDipSXQ2g
u2wMRe/36CjFBSP2PdqfBSjG4LYeSdXWEI0Su+vUlVaMQX+VfyiZJgnRxhxo
tLhkAtPxKLyuNRX5XXHiDsk2gWZ5XrQvioRW6F5G5S2bwO3Z/bLBRCay6Ty9
3KJsCs+/8NSlm5LRSGSs/keyKXTNn+neMMlGWpfm0O8lU2B4h3W4P8lGnbQq
QuzKZnAq6KX69zvZSL69LPk82QyMtUp+XQojowfhu3/rLJkBFdtNz83NTJTO
96Cuic8c1H9/zKKZIyHN0MkZFTVzYBE7PqKuk4YYJw9yfPAyh192V0WtNZNR
B4C6XaE53Nvzmmts+C4KKXAO3egzh9tvtmjuhIWhDbP+OVY+C2AMaazVVtZD
9WiLq+SaBYy0rSww09lgjjyi2me9LKDX4BtjuKkfNjke13y9zwIYXMmKBw/G
YzkKT5cm1i3gx5HjbBE3UzC9vHl+F15L4D8iX+2om44xb3Po/7tqCYb3nrgk
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
3Ez1/z+vQFCZJiQRQam0KQ9AWg==
            "]]}}, {}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{0, 0},
        DisplayFunction->Identity,
        Frame->{{False, False}, {False, False}},
        FrameLabel->{{None, None}, {None, None}},
        FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImagePadding->All,
        ImageSize->Medium,
        Method->{
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None},
        PlotRange->{{0, 4000}, {-0.06880966305501848, 0.05153991688696636}},
        PlotRangeClipping->True,
        PlotRangePadding->{{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}},
        Ticks->{Automatic, Automatic}], {192., -116.80842387373012`}, 
       ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}], InsetBox[
       GraphicsBox[{{{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
           Opacity[1.], LineBox[CompressedData["
1:eJw11nk4lU8bB/BjCSFLlihlCT9kSwg9czohIXspJMlSKhVCknSSbCGJNnsJ
SbZQceZkj5JOsoVkXyKRJQq9r3kef/G5vnPfc8/M47pIOp23cmUmkUjWLCTS
ys+xX4smBieEdv//V5KjpQfWmMEhq582jUwiJdCauQNsRdNYKLgDsbY3GtMs
aQK4Ux9h0Ymed3eHi+AeSMX0Lz3Xvuy5GTc1DlvO9j7XqShJ+DnN9sF6ykLq
VtzlWbSi0Hz+DUKyuB0raXy+Zv3q4XK4xRjYGZfxIqslBdw9dbRaq4gQD08l
3F19NMk9cjbRgypE/1oafUO/YKvidtxyQ9g4T+HSwAk13Dnz2Ea2a0PTqTtw
t0/SDJfMPzJ3qiOXO/IBn5ktr/iFNJEdz3KDR2M/UiXMd+Lr69ZCRh8tXCVc
C7fDb2z5y00vcpU2Xs8rDxQ/2R0xXdLB82YJaFcnr2+/E8PzQ7og9M284hlP
gOc+OqCo5K2Q/zMyMlVQC/Q9v7scNribOC8ZhDUVTr+/RcHnsZcG4mYb3T4r
7lmxxICWBSipv9bVUY9MksjXhSZ7Ry36Tuji/WTFYH+5Rc0oix6yHPtx6I+9
0p5KxU36oAP4X4nnzgN9fL76fTBrR6gUqRM39ZkSIOdN3GX324v3N7UALQqH
uHiFDJBT4R7gngGvChfi1rK2AcxSMjObzffh9c83gQdJkW4y47jt9l6CqqIz
XYrhhitOdWs5BN/GHbFUlzVCeY/BXuDAV1Wzqwr3uLcTnL2poKPnaIxs4X0E
RLLH5hov4Vb/zwduvb4gZfVwP7J0RSQoXXa8Z7vTBDlg80Vg4V/HdbwZt39Z
EByeVaG6eZoiR+aHgkDPezPnecyQDR0uAsEfy24Xn+H+qnQHPHM78TXQ0Bw5
7HME0B34YBkyiJtscRGM523sN9hjgRxy0xe+OmuW9O4WMsVvPggEbws6bNaN
51sPJQHz0WL+JkVL5CaFGLgxc/S99WXc0l5RYMhlc8iXeuRyDqE8UCBlSTkq
YrVi6qO6AhjQE/yn5wQyiYmSAQyTXxW5FOP58JtHUMB+/NwIywGUu+2/BbpF
JeTdrXCbf0uB2W0H+n+m4nY09QUS9wr388zhfj/wDN49xF+kuP/gih13iL2F
3MIeYvtTkctzVXNAUEtj8KlZZJJDwn0wH6f0I9TYGu1PPZgGzx2MtM5IQSb9
uxANBwTGYPUMMt8pzwxo+9lItt/oEHr/IMtS0BibFc2UgkyyKnoO9a3Yf4vP
IFNmEtNhKf+JY2SjwyjvC4VQ9VP1W/tk5FTr8XKYEbNV9fI08uThG5+BmEXQ
/QeGNmge9fp8GMvbS3qVhExJEG2EHB93n2r9hUx66h4LAqOTP83ss8Xfd30S
nDFd0hZIQpY4LtUCTq+zf7T9F3K5msgL8K2hlNNinx26H76mWngwUvTCuURk
Rt/59+Ddfr/OyClkwzifVkjhatN7ZnBkxTEB+5phyTuNnPoEZP8rFweBYkSc
4Mgkcl37uWL4yGg6gM3AHvWT8RmEImutBqUTcPdVVYLounxTvUlkx5uO3ZA1
jLfk+N6jyH92tEP/fee2UB8iqzYdagGTbB9Ckn8iuwVUjELX2m0/afoO6LxH
p1tAx42Iw50PkMtPGhRDi72jbxYmkOf/aI+AWlZDORH9Yyh/JPMGYNUZMZoP
juHf75kCWHh9zcLBCWSKXP4QjJMszH8t6bhiud7ZCWB+rXfA0ASZdNf3HuTs
5RNt90Vu9z7cA2ooFNOTachUafOPkJp6/trce+Q+I/gX7CKlFN+YQ2bQPL/C
uWONo4KSx1eMfZsfBwVvljan718xtaYjbBa6iytZ7fBF+Zr8qSkge9U+pDIV
2YQ5cAr0dt8stXyP7NHK2w4SyWUTPbPIk5O5rORDyd+lPCSc0Prlw1OAf1n0
8D9jZL5WxQXYcNToZrQPsuHR8lkYCv3ebE5Fzrp0egHobs6aznmH7G58eA4u
BbT9h80iszq8nIKvutjs34s7o/tkrRkFFzDNGDtjZPuAi7+BcqJr9ag3st++
+UEw+jdu3i8FOWh+hImefqRakeMdssst+QVwrGza8d4MskSKxDe4cdPWeFlx
F3Tf29LHYIu/VX2xEbLjBbkuGNNxbUnfG9knLo2P/GRqQYU5Ebmulv0PLOXw
cnpThdwnrzIOPop/jwsYQ1YrEOMkD2g6vdUWcP2/Kds6hybhgmnHwpzOikmC
lvGdgMfVSrHICdkCE26EWwPeOXhGIHu4p44ArTu6t5ULkRmf8xaAaXZp1dgX
ZJ7eY2vIThVqc1lMJ1bctE6DhXyxPVvuhDyyiJ3xMIj8KXVkqyUyKTSPiZ7G
lhDV44es3i4wC0s2C5QnpSIHiCawkRvUb/6yq0NeHN21lt67n0VGZBJ5/td6
EnnO6fLhlg0nVxxoxMRO5/afDo/djUz9zuiFkrfP0MxPInsUYf+AZlb/BPct
5J5blF6w/80RyXclyLVqT9npjq2fD4R2I4dtNR2FPj/2h+izua04+MQPbnIE
a/UrJmXk8pbqYZiyCRujWyM7vhjpB0VqRZsDriAX9RsugnojRQvtJ8jFmvF8
5G7H9KC5BmT1I6ULcPqiWPGLmRVTw00Gmcgct+KGPcROreRWavv7weYM7o3K
+isuT5BjE6SrwWCTsTMoV3g5PA32NS8GZt1B7iJ59wP7Me8C1zJkad6EX8CT
+Ue/VD+yyFn6Dxgi6ircw3l6xXu/cfORE1S/GiapIW9bPr+Rnr/P+rKdHfJ/
jmUC9BqHD883BCHTxWw46R0+e3uanyJT+TTKwc9IuD72E3JDcDYvmTVdY6/5
ArKduRk/WbTs+UVuyTPo7+fZ2QWg3CSTXW+IPJmx2An1RpO6QjyQr2EfhOg2
JGFe/fvIPjzmEvSzG6L3MJUjc1+zXEsOUmbzpg8jaw3vZCLf2xuYcZnXfcWN
1oEc5Bz7uXatncjzP47NwIoL57jmHJAnLbvXkFsjhsCLEORFFY45OJbm4OGR
i+zxce83QHrd+kipFZmZVZmHLMQwa/m+hNxAo08CheFa9iyZs+g++/v46buX
yTqupsh3ss35yQeFXrpL+SCzpKuvpZ9SVEn5loj8gLrMTg7Uy/yUWI3sXW3F
Sb5jJ85qN47c4pW6BLM872luEDy38j0Y8l1lJ9PDeE8171pxD6cyXZL+OSU0
4bbzikm7F5XWkIXtd+4OjUB2PLC3AdiIDPcFFCC7q6n+AwnNd0O82ldMMfVQ
k6N3xxgouP1D/bdYLkjRJU3nPhyVPb+ynm9pYQm6rM3wPGCKLKFsyEXOrLEW
MvJG9tN4OQ2/X1vzmpyAHFykNQWUyMX26pUrpl5PK5Uhe/xxISmMovyXRMk6
ut0RziZeDg/kWy9J5MvafY8jNiGbB4vvICduKPVZo4Jcrv3yO6DP3t5H1UWm
Mol9Bj2fT4n+tUaeuX1jLZ2pcM+YzynkfL2LnHSpGFE4GYBME37JTtY/NxV9
JgZZK+LIFrqrSb3j0GPk6N2C6+khCmlqx18iR06+FiVncVxi7XqHLHdZTZxc
P2TReqgb+W3KkgD9e7Vc1qcpZNIuRhXgfkzyN1njueLAyShmuvK19v1vRVZM
DZyQ/Y9sfix/s64iygv8TvHTPUDYT9pulN+LTpWkx25yrNh5AOVMbzP56UUL
O+8UnkBeNLVlo7e08boq+a+4nHNZT4o+VzysmRWFcr69f9qASNwbjq1pyKfn
ny1DHa97HUlFyKwXEyfgEYvzOSJ1K7Y4GjUhTA5Q3hd4p3PFPWVGl9noydzi
Fjw/V0w5v3eaj17+fU4ynNlrZb9Dv6SF6b11jdMswl7oe6ycYqMzZ2bUBMqv
mHpE9J8YXfpG4L0FDOUfjr1gIRs4HzrlbYHsyG42DE7uUd710xm5+7w7Oz1M
nG3d6YvIaj/PrSNnL33tHohAZovZxkR/31mcfywZOTWmrxmMv44K6ihAjlt4
sAh57rsetK5B9vi6MARVfIEsox354KLrH2hxUGjeeByZoyaUje6l9qO+5h+y
lsqTv+AOX00CReACer+qb79h0UTi2TJZ5OY6N1Z6a4P3bk0dZNVUlwn4O9uE
v8AUmfKprx2IhEv3bzuOHCnkI0TXOblYlOGNbBF/gItuv7c5RDIMuW7CfxP9
ytYcm8QEZDnpIQF6MlOwwoY83C1v/sLyb0cWb1cit+/5KEDvgzsauVvx+XhH
+gBLIldq6Cjy5mF+Abq0f78n8xJyj+H5KmhgU6Z3hc8b7fe5YAQ2zW2uSJZB
jj5lz0d2iKeSy3WQqXLUZ/D7jv6yXnPkmfu5f4Fv015tFlfkxN88C5DZM6tE
2h85TOXMKIjm5VI3uIU8fWaRRN6Ye7bgZDqyY4TwO5hhwlAOf4084LPETFYb
U8vJblwxhVq5U4xOD4+Xb+hfMfXBGs1JYCw3n/FjHq3n2cX4Dltr7aR5eXxW
vreEN2c46E6uME1164pJTiLjv8EEi4S4lRayhM2mEeD/KCjxgimyH98PVjr7
nkHReCfk/JD3kyDu2757JReRu7adngMSgdmC7ZHI94fce0GO2LrYhTTkWa/l
DXStsvO8m14iq66ZYyFX2zZFYg3IPV+vfAMW8+qcDr3IgvAjC7nr7r3Qq3PI
lC7zMuim8Yc1jcsX3S92gA5nPtsHVUr44t+LzDSger3516+B7Oa56zfk5pe6
smY/siN2rBfezwv+I+uIHKPXOwWlzYYvGvrg/ZQma2D+uNHsqQjk9g9RJDJ2
M8frZgpev/b6MqyT553MKULWejG0DA/WeZ5trEfWV1/PTe450fz9Zzdylup/
a8jua3a68c8gk0ZDPoL5xw8G1dZeRN+jpzoXOVh30engFuSeqQoWMl+vQ4/P
DmQJs4u/YOLViqP3DJFJzwfeALkt0p2vjiILLpsyk4toITYdXsjnxBlryJQj
oy1/Q5Gpqu9yQMPC/gObk/D1RWf/QJv7uQxyIb5fZXszHNDkN3N8i1zuz1UA
PVouvL/WhcwxIz8PFy+0Gj6eIubVWYJh67Vrq9n8UH+7pUYgWJCgN7QJedLz
xxJINV8uZ9+OnLOreAooTjiS5Q2QsSf2c/BVZFWZ8RHkrmSfMai/TVbb3QOZ
7UraD8ioDyuJuoE84KFUAu3dxnbkPUQ2LFRrgyNsZgWMPGSG7Fgx8H6Sr/yr
GtnvrVQDIOkL5Ah0IO9y38BOjuzzkdf4iaz2aHgSiFxrzzjEegl9L1zPXsJ0
8V3SfqK4BUzagCo9Ke2BMrLjK20WMs2eJF6mhzz5+/0YNPrrlNhlgyzB5/sP
BM2OisS7I/s9CxwGtJ8e8aZUZEFDvTXk2dHf/GxxyOPzd2eA8kBgND0T7y/A
MQNOdq/huliGvGjsvYac2h4ZqvIR34+t8i/80iTAOtKHO82Dmbz+w0Nq6hxy
uXUkA+x/K7lkw+m/4nnWxHkYXJF1iX8Lsh/VewHCMpW5+u3IFLH4AThXXOIV
tBeZqus5DVXywU8dWzw37pyBbtnVZ6bdkbk7z7OT09L3jzyjIo/ccJ+GHclN
Li5x+Pro9mog8MC2VywL76dzpxGY3Ok52lKGTPp6LAvciDrZEfUR2eKD1RSg
h04cMuhHliiMawG/r/l8Xp5DztLJ+ANVAxbNX3JeRudzPN4JTvtebzi/Bbnu
4Otf8LEHp5GcGjKVJFwEu07frunZi9yzJvkzFHYV0X1giyxhResG5sdS6JZn
kWPmSYMwzFZ2F+c1ZNWip1Og4sDzl5VxyFnGSv3wj6m6+uUsZMaYAwPsMCzL
30FDtqhR6QHuurpK4x+RHe12TMEnWP3T9H7kVBbbT6Bb00L26G9kUnHXF7Bh
e9sjIa4A9D4Bb4eAxTYH8cYtyLml8yR6uMxgQogaspxxwjyoFHcX2W2AnOrI
0QgXRafjftsic6y79BVoCPrz559FNtQ+0wzO8TBFu11DpnTbfIVZHGGckvHI
lcesR0AvM2/ol6wVU1O3P+6FG5fiWWJpK6Y0/nPogwd+i1GNGWi9iGLOJxg5
9XiReQD56s6DM6BmTOFS2W9krMyzBy4PFsxe4LqCvscQg3Kws0fLS1Ec2dta
uAd4dLyZGFBDLieFfIBPmw3OJBkgU08b5cG+xg/D1nbIqcKPGuGm+oMuPOfw
9bnylfBgVWdP7TV8vVzlIIiCTkevxiPHPDMdgbUvR7/sfIp7TGUM/ivwODRJ
Q35lFzYKtHJ+N2UxkOsWJgagZ0ag+fEBZNLuhH6YnbqmQXQe3//f2knY/zDS
sIkrEO0fOdkFxeIFaiLEkfnmKL/AoVsP9+jtQKa03nwHb4VL0v8aIHt4v+sB
avo7huzskR3N6c2wdVmfp9QTmar4dAD6vz6kKRqKTBpgy4FbvN0c/BJxF3yh
wUpl/5C2AuSe0CMtwHX0Zq7mWzw3m2mDHOlJrfFdeD8+v1KY45C3PDOFzCC3
9kEL0QrZg+xX0XyNnh1g5nOT2QsxZGpkQxu8Hz3gu14NuUd+hgF2Gc0le+5D
TrUr6YPdLBxvGfbIJHkZBgiii/5U8cLrxfsLoOylbRtuheL5Q6kC+G4H2D2R
iO+HabSCcxNmJ00L8fx8ejpc/9TxVs5bvL/CjgFQ4uz1kusr3o/HsBbYbgn+
dvoX7o2Bb0Dg+DuWQRYqqt9DzwSM+s/34niQy61jv0KpzK5t+qLIFrHdfdA7
ePDN9FZkCWeNDlh7fOLAY2VkKn2sBors/j1spY3Mx/a6B54WIwUw6+P9jyTd
AbQFDr5CM9xppz5Anjb+9OO2uNVqq6Bj0UYtfhe8//aXX2Hh7a0N5eeQKXwu
+YDlvKKjxyXcLw6/BwdNNGbEg/F5Mzbnwwx5ctjHaHweuak8OM+2T+zqA+Qe
tvY6aDxgnq+cju/XdvwFTKyw0e/ORY4R+vkWTiQfb496jfe33lAFKAGn3UE1
3l/GqgLG2l4g/WhEHsFILWBAMyAu8Qsyp+LBZqgpeEPOZGDFqaKfY1th2FQU
7e8E3i9QJwV8abxr8WwB2XGeWgwUclIG7FivoVy64RMMCM/y4+RF9mjLqIKN
Jwq4S0WRe3RPlgIJ/dLUU9LIWqCuGXpJVqmLqiCXn2DPgdXL7+vqtJFJm549
hcJdzfZ++nh/+64i6Pb66+R/5shUxrcMUHp3KLjNFrf/rlzI7f1TJNQFr5f/
dB84WM7naJ7H87qPZTBPmWnP0CU833o/E5C4OVvig3G7lpZCq9H1p/bewvc7
zFcF02s3Lc08wPOI4BIw91j6dno67qjDZcDwmpLMwTzcJIlI8NBB8zVLKW5y
Uwkc37Xb9EU17vT8cEAWNex1+ojbWTIVdn5Lvt3zBXfapnzolzG7x2EAN6U3
GgqfNfnVOYG7YmcqeLHj8SPbBdzj28OhxZ8FqzaWIHS+nrYCOFFuwWLNg0zi
PJMMb4ZmvmgSwc2XkAXkzJadLbbi5l6XDWsFrQUblXC7/sgFzp3Pqvdr4X5b
+RqSHjH71OviZrw+BZPdbGX2meL2z0sDu1TyW6oP46Y9fgjaZ9lCdJ1wn2d6
CXxpRzXL3XFHON2BAteLhsBF3As3skC+Ede9smu475beg2Z8Tvu0I3Erbo6D
Y62vfpfcxV0uewWGJfFmqacR+0XeALIuJ2wKn+G+nfsIVilADtUS3LZWz4Dj
lMDr5+W4k3sz4fLL06e2vccdNpQKEgIrRJ+24PfHZFgEtfaKvJPtwfPsK4Ww
leu8f/p33PMCOfBCU42C1Cxx/pwYwPdArDPlH27SxAmQe+zCzc2c1/H7HogG
+2Xf7UoQxK0fHgRGxiXGRcRxJxYmwhsvLibelcedP34OSvk3mgiq4+6+GgPL
KTJLt8m4pe8kgKPsAc95jXBzWseAPx+ajkYdwN2xJQ7cj5Pn4XLAXafsATSO
UOlhbsQ8B9NAk2TbObYLuAPtYoHHiJJ48BVif4VsuC4v+CNTGO7F3x4w26fz
6tVY3Frr46Ehpqa6lIg7a+44GGQO7/HPxP06JAUG1X+LmS/AXfA7BUrEaO7x
peGm94UAeChqaroW95o7scBu80Ca5yfcPSO3wXy/jtXPTtzBvbdgfPZt5rND
uP8ejIdqniOF3ydxxwxdBYydu53d/uKePBAMzy7HCwytCUYmc0cAzprxKmc+
ZOqOV7dg1k09796NeF5UdQbutXoofUwGzxdsomGfyFRzlwqy6v6ha4D6bd8N
Ox3kHm/tOLA5I1mjXR+ZkuaVBEvdZwetzfH6gfBQaLPD5O5nW7x/9ZNrcHbh
kYGlC+5ALV8QW74w13gON+P7RchW3Cd73w83xX4H9H/6/tDxINx16lfgRFJR
iEIkbqqlGXCKTSqZjifq1a6C1pCQIVoKUT9wFhhfPi8c8hR3q1QkpJ+3MTB/
QdTLy8PtLnt8RSBuPktnmG6jkNFbS9xH4w0oYirQms3AfZ8rBEbuWVzj3YHb
RvQmJGkOaoAB3MkXg4G3QqMr2wRuhXs3wciWl/Eff+NWrQ0A9gKpNfeZbiCT
DutDBnv47HEuwuVfaPqLnjLbhHCn2p0ErybtrGe2ELn0Iag4qHcDyuFW3eAE
U74oFoeo4S4f9IHrG4UGzTHcIqUeMKRyWVDUgKi34od/Sob1+8xxO5p7w3PP
GN7PbInc0xP2pbxO93bGzcpOBYfiHjWDs7h79jvBd2E3Wdkv4uaz9YDkK97q
DCpu6rZ9sNDzqMuDCGL+j45Q9oRBnFMcMV+fG3hop1K9LZnYT8YerDMXmZnJ
JCy+G1L1mKTpBUS/PCMws/P7gdAyop+PJXBT/HzdooaYBziALgnaC9GPuOu+
UoGF0JP+vnZivlpvWL02WiCnD3dW8GWoteyr5zNOzKPtBHN+HbtAnsMtMWEB
JIYNH7OTQnAfOgPjOrd/ZqzFXb5kCjgYG1keCuAmaXiAy9UsO5w3Ez53AUy8
GndS/A831eEQcHreEjurirvngRtoTaNX0nVwU0ZtgfHdzF+h+kR/tVOQHhEj
ZWlG9DsoCtWuXrLaaEPk3+1gxgWnoP7jRP+nJmCj2/7CnDPEer8DINpevc/H
h/BWJ8BsuXn97quE+8nQdy+bLkc44bUYHNX+6fkplugv7gbsldvTHiYS822y
gwypik/OGcR+n6yA/oZsJqV8ov6RHnjFdWf73GvC6eZAkRRw/E0VUX/KAqbO
uNwO+0DkXxyh4KhphWUb0S/AFIR91Zza2EvkemSwXW3Q9+UYYXlr2BFyZ/HA
HOEgR3C9c0/QJCkU7x/gDBVVJ9mjuHCTfI1gS3BylLwwYQ9nEPjFRKBWgvCS
LpRT/nvfaRtuiV9O4FPQ0y3/NIg80Bz6tx1OT6AQdrIH0opsClr7V/vvBB+o
RXnN1ripcgbAt8VJw9ORyKnTNHEF/rJ1Zwizrod1gW8o2T6ESdzA8/PZWgMq
UZ9uBTbKiZn0RxA5MIBVAe8+XY0nPLoPuH/yOyyWSpx3vzUUkv3v66tsIo/h
hHT/FifrYqKfhyU4+fH6yNQbIr+kA/ik1c5FvyNyB11Q6tczrdBC5Ip7gPOH
6EtvvxG5nTbglgL/nL8TuexGUOI7FkyaJXJRLXjs/QPOpH9EjgkBDgnDGG3O
MOI9NWGB95xQqyBuCRcraFefnuAlTuTf1SDLlgOSvAq4SV5qMMeLKfOZOmFJ
FWD9Nk/RcDdhC364vMmhcMCIsJwSzPTg1rp2kPCcGrCoKYWbjxE+uh0siJ7S
Kz1FWHg9eHRuQ/0hb8LMUsCkqsZsOpBwjwic3eDdfCt8dT8hmOwuZacYRzhE
FhpWML7VJRM22wqmhK66uj4lztO6Czw8rTTGVETkhzYBvTedHsl0wlfVwLhA
xJxOPWERdhDvphXQ9pmwoywgwyEm727CQ9vBMH98KN8o4UoJGHNCb93zacLp
XECnbCrWaJlwzE+snzdVZIgjHJ9HQx1GupglBwngJkl8oWm+XtwqvoXwkCr8
tu7Z0zI5wnpSMMzJVsVmB1EfpQm2v2QvngFE7i4PO7hKdG4bEv6qCa47upQr
HSDcrAwVi9cbvDtKmCwJW9ZWvD/hRrh9Kwh0OG/JcoHwyG+a3IvNbSlXCM9v
gZ/YG+yxMML8MtAigttJOpawGx9gcJue5E4kbKkCLW5Fuc88IdzTT2PwN3p2
5RG2+EOziOO5WP2aMGk9/ChsHpBTRfgVJzB7cOta3IfVeYRB4yZGSEAbYSMl
YJbMF+nSu7p+CmuUsLxtMkaY+hkze3z7rvos4Tph8EGmKUHsH+FIdmCStT6N
dW0EbkVJ2KBwIGN8PWEaMzR5fudZsxhhFzbYoNKcT5Ml3LUJmhQKlqSrEubr
wd6rW5dF6hDmGMeMX8aXe+sTNuKD77Rba+zNCFNracY04ff6NoTt18F35MMM
RSfC7bM044p7LYLuhE3YQb1ee8eiD2HZTcCwVqRn4Crhnu+0OkPbwYbw1XnG
aIbvH3wvukM4hxvUmXb8TEzCTXXZCgwZG2eDM4mc8g97a3Xkj3tBxOr7YAYt
Cf8OlhGuEIS1h7tYQQ3hak5o0CHGKfOR8MBaUGt/lHfdF8K6vMDgW5LgbB/h
L/yg5ni36NdxwuWzNP2BLeI1c6v3zQKrTxyTfk66iXt+DdQfTZGP5yRMTaVV
n+lRviJIWKIB05+QUHfdQhjjgVUex7VN5QjfZQa602lkDTXC5Syg0qdPbzNG
2LEX052XMlpjQLhhAav0dzb7YU74/h9Md+nxgRbb1f0rsYqrAzbQmTAbM6Qw
yzg8OUt4chwrD3Z1jrpImNJOo7BnuPlcI+zRi5WHD509epPwq2GMwv3fhb3x
hCPHsDfRJ/2UUlbnbcbI/FlXhJ6uzltPo98ZCVoqJJzfTiMLy4cN0gizztDo
909Ffahdrf+IkTdlxxYzVutHaDDp+72kDsKpL2iYxLakGwOETQYw2qMzj85O
EOYbxTCZnEzr+dX1kEbLHM8BzJG4OVpooQKXG6e5CN9vp1ldXTv5VIiwTS9t
89g9fkdxwjF9tJFDsjuE5QmXp9FeVBYdbFAjPD6MBSrr+QZhhAOGacYPP93T
Mljt30ITYnN8PWFO2KIC6/Gc6Ei3JZz/hZbzNWDRznl1v2bsohHXFv6zhM1m
aLrFD3a/9V1d30hbJyl3/AqVcNEk1h5ZErQjYrV/N+3xvH766B3CEhXYOZfP
NSlJq+tHadqM48PWmYSzRzFWbJKDu4Bw+gDtY2agQmUpYcEO7KHAOhO/asKO
3TTXqwlnlRsJm/TTVMfkbw20ER4api0eepX/sJcwKZj2ttKgyWJs9TyDWKxy
yzTb7Op56jGHh85CcHl1/hZMnu2X5gWOKOI9O7AZT6qN/HrClM/Ym688/t82
rfoxLcIoKSFehrDbe5p18Ta4X2U1b8AkJEu7mbRX/QwbizQkvdIlPP+WVjLf
KnnOhDDpCmbCmHbpOLZqCnbpqtJYYQhh6jVMf6yM+1TMaj8axnfYWFn8IWG5
Wqyzst285fHq/J+wDOWTnjefE455i3k+nI3d85JweTkNYwsu+l1OWOslxu61
vvX5O8KMbKzpa+pv52bCk8VYkpGK6Mbu1XmiaG7FUIcxTFikAdshaWIfMkX4
/9/bcmTHFezv6noaVj/vlvKLNRp3TxktzuV3eRYPYe73mCPjRp+DCGGJB9g2
TJBVSIqwRQ5tLvORzPttq3kerVJg+75rGoTv12JRV9+47dxNmOSM2YyZRvww
XF2fSdt6uOvZYyvC+dm0icrTH2ztCdeVYK+VFyZ4T6zu94wW/DCUr/Y8YT8a
LfhEZ6i5P2HHh7Qbair/2oMJl8fSQpaDfJ1uEabcxULetf4Ye7A6zx1ayF0F
V5/01fr/506BXcu5hN0KaKF/ZN7zV6/Wp9HCai/pJjSuzvsIC4v98Fr6y2r9
dSzMQXJ7bj/hmDgsTMEna+cEYcZTLGyuTrxinvDiCyy8UuyeMcstIo+hRUR7
8DSvW/VjLMKu+sZREcLUAFqErMjSkBTh8se0m7/OeHsoETZ8TIuMEHC+rkuY
pEWLLnWiPHVfrffFbm9k+jtTTpgvgRY7dNAr8P1q7oTFFmaNsrcSdvSmxRpb
tG8cI2yTiBnDj3apnDHEe6RhJj+2aNWqEybZYOam8Bd/OGEJX0zHWPXcYtRq
rk2T3fd4dCiWsKMzbZES3lOWuJpfwLLVrRtd8wn3nMDYxH48fd1GeNIHo38X
O35c9jaxXoOmHBbwMb+KsKoeVlI/7FIqcoc4z+Su5+p8waEn44j7erXL1y4w
vjolnsipu0ZC7h9z/3WXeF/KLoVz85uCle8T/ad0hO1Zb7PdeEC4VMfzwodb
Ji0PifN56STv7aIy8yYSuaqO95Z7Cludk4h8UHtj4b3aF6nJRP9UbZXz1uPs
7SnEemXtiw+OufbHpSL78/Zrv7F5+cFfLW3F1KnmYm37Ta6x+74ipwp7eWvn
e01tmgt+hMzGpKp9NjM12V7y8Yollr3GtAK/Pbky/w7Ze4ZRrjU/88Ha5FT6
ipX/cwvVkk9p/nWN9QmFlJowukluSSvPZPv4eM7/bZvOpbt2q3ZyW343r3EG
pWe4SIBPaVSr1zVEyW0mg+JWEnlBSTlNK+pToI/fnUwK9btl5bo4G63JT9ZB
p1WyKIz/XuaU/cevldUSNHa7PYviEaT3wm5nxc76kiZTT9+nFK1pOedPDd47
yQl+3CGS2RRGant6k4PUzjOCS7cC6rMpzZXbPstUMTRJZ9K5t514Rmn6yBOk
MRWk+b06bZCHL4cS1pXMkmSqrAkWK15m5+ZQxpn9gv/T+aqxr67cTM74OUWV
89J85ECURsY9Id3OX88pOhrlRXWxmhpn9aOUDWJyKUOzZlHbigfVG3WzhNbc
yaUUFtu9rzwzoK66p2qxKj6X8r3o//9qafSrz4CFd3sScikNNQIVoaRedf+d
ridBRi5lgGmd4JH0DvUwBZCqTsul6Pqcup3jzFBP5/vBv3Ukl/IqdPqY9sPX
6my8HAu933MpFpt0PUO0X6m7rdvak/ojl5K7QwmTnCxR38Zpm7tlOpeyeP82
/6nkIvVClhrjjcu5lMbKte0Jvfnqb+YSr/ML5lGavN5trkzIUpeYfXmaIZxH
icvRY538nqkeNN1keUs0j/LIMj5BzjJT3WCSQ2KdeB6FaY9VfLhjhnrDqDeN
QyGPkuDQMCNCfaKuPHLr8VvF/6/vyeuUCXiiHjOUHRGikkeR5DaO/RH5RP1A
f48Nq0Ye5Sa7tMvi+BP1ot6/u6t25lH4m/jb7mMZ6sI9wv8F6eRRchsL+bLT
MtT9urfz7AF5lN3eWoOxYpnqHV0ms/9251FYE6fa659nqv8PlK2l7g==
            "]]}}, {}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{0, 0},
        DisplayFunction->Identity,
        Frame->{{False, False}, {False, False}},
        FrameLabel->{{None, None}, {None, None}},
        FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImagePadding->All,
        ImageSize->Medium,
        Method->{
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None},
        PlotRange->{{0, 4000}, {-2.8169045793863257`*^-9, 
          4.452446619729322*^-9}},
        PlotRangeClipping->True,
        PlotRangePadding->{{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}},
        Ticks->{Automatic, Automatic}], {576., -116.80842387373012`}, 
       ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}]}, {}},
    ContentSelectable->True,
    ImageSize->{780., 245.61684774746024`},
    PlotRangePadding->{6, 5}]}], "}"}]], "Output",
 CellChangeTimes->{{3.667096711107746*^9, 3.6670967480924397`*^9}, {
   3.667096876593495*^9, 3.6670968892967234`*^9}, {3.6670970517511654`*^9, 
   3.667097081235783*^9}, {3.6670971397831507`*^9, 3.66709724881717*^9}, 
   3.667097279129936*^9, {3.667097786747154*^9, 3.667097826044338*^9}, 
   3.667098105593521*^9, 3.66709830242325*^9, {3.667098546791931*^9, 
   3.667098620594814*^9}, 3.6670987055173984`*^9, 3.6670988712086687`*^9, 
   3.6670997017126217`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], ":", 
  " ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\[NoBreak] recursive bisections in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"r\\\"}]\\)\[NoBreak] near \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"r\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"8.440334557005562`*^-26\\\", \
\\\"}\\\"}]\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1.2446017683113837`*^17\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1.2858792080777443`*^17\\\"}]\\)\[NoBreak] for \
the integral and error estimates. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", \
ButtonNote -> \\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6670967092014923`*^9, 3.6670967461080317`*^9}, {
   3.6670968745309725`*^9, 3.667096887218582*^9}, {3.6670970504230413`*^9, 
   3.6670970787357802`*^9}, {3.667097137830014*^9, 3.6670972766767874`*^9}, {
   3.6670977847314987`*^9, 3.667097814341117*^9}, 3.6670979882800493`*^9, 
   3.667098283735614*^9, {3.6670985282478447`*^9, 3.6670986179229336`*^9}, 
   3.6670987027986317`*^9, 3.6670988685367756`*^9, 3.667099702040748*^9}],

Cell[BoxData["1.2446017683113837`*^17"], "Output",
 CellChangeTimes->{{3.667096711107746*^9, 3.6670967480924397`*^9}, {
   3.667096876593495*^9, 3.6670968892967234`*^9}, {3.6670970517511654`*^9, 
   3.667097081235783*^9}, {3.6670971397831507`*^9, 3.66709724881717*^9}, 
   3.667097279129936*^9, {3.667097786747154*^9, 3.667097826044338*^9}, 
   3.667098105593521*^9, 3.66709830242325*^9, {3.667098546791931*^9, 
   3.667098620594814*^9}, 3.6670987055173984`*^9, 3.6670988712086687`*^9, 
   3.667099702040748*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"D", "[", 
       RowBox[{"ef", ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "2"}], "}"}]}], "]"}], ")"}], "2"], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", 
      RowBox[{"1.", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "50"}]]}], ",", "4000"}], "}"}], ",", 
    RowBox[{"Exclusions", "\[Rule]", "50"}]}], "]"}], "-", 
  RowBox[{"REAL", "[", 
   RowBox[{"[", "20", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.667098723314455*^9, 3.6670987538459578`*^9}, {
  3.667098875661865*^9, 3.6670988837868834`*^9}, {3.667098924037263*^9, 
  3.6670989423186255`*^9}, {3.667098979162679*^9, 3.6670990906480093`*^9}, {
  3.6670991812112494`*^9, 3.667099319306115*^9}, {3.667099435666463*^9, 
  3.6670994444477887`*^9}, {3.6670994899637346`*^9, 3.667099530620334*^9}, {
  3.6671009684551663`*^9, 3.6671009762396603`*^9}, {3.6671083481561337`*^9, 
  3.667108364171891*^9}}],

Cell[BoxData[
 RowBox[{"-", "1.6609977282477928`*^-16"}]], "Output",
 CellChangeTimes->{{3.667099243446102*^9, 3.6670993247280197`*^9}, 
   3.6670994454477444`*^9, {3.6670994912606373`*^9, 3.66709953168284*^9}, {
   3.66710097089589*^9, 3.667100977263381*^9}, {3.6671083512655354`*^9, 
   3.667108360640629*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@", 
  RowBox[{"REAL", "[", 
   RowBox[{"[", "20", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6670994679948535`*^9, 3.6670994836512327`*^9}}],

Cell[BoxData["0.00098125`"], "Output",
 CellChangeTimes->{3.6670994839793196`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"FalseVs1", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"efunction", "=", 
      RowBox[{"Range", "@", "20"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"efunction", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "=", 
        RowBox[{"First", "@", 
         RowBox[{"Eigenfunsin", "[", 
          RowBox[{
           RowBox[{"V", "[", "r", "]"}], ",", 
           RowBox[{"Table20REE", "[", 
            RowBox[{"[", "n", "]"}], "]"}], ",", "r", ",", 
           RowBox[{"{", 
            RowBox[{"4000", ",", 
             RowBox[{"1.", "*", 
              SuperscriptBox["10", 
               RowBox[{"-", "50"}]]}]}], "}"}], ",", 
           RowBox[{"WorkingPrecision", "\[Rule]", "50"}], ",", 
           RowBox[{"PrecisionGoal", "\[Rule]", "15"}], ",", 
           RowBox[{"InterpolationOrder", "\[Rule]", "All"}], ",", 
           RowBox[{"MaxSteps", "\[Rule]", "Infinity"}], ",", 
           RowBox[{"MaxStepFraction", "\[Rule]", 
            SuperscriptBox["10", 
             RowBox[{"-", "4"}]]}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"efunction", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "2"}], "}"}]}], "]"}], "2"], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "2000"}], "}"}], ",", 
         RowBox[{"Exclusions", "\[Rule]", "True"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "20"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"%", ",", "6"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Abs", "@", 
   FractionBox[
    RowBox[{"REAL", "-", "FalseVs1"}], "REAL"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"%", ",", "6"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6671006088635645`*^9, 3.6671006138323603`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    SuperscriptBox[
     RowBox[{"D", "[", 
      RowBox[{"ef", ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "2"}], "}"}]}], "]"}], "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "10", ",", "60"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.667098956865624*^9, 3.667098998991003*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
GZtUSMgikmFC3FcP4gcdKBk0En7l+MdfyV8PRgPzq2MGJGxSzt32Q6Qe/CM9
SlhPk/DPzQLfFcl6ePY3kDnakoRsFzw5VBXrYbmOqbXblh6/+eGZcJV6OOoR
47nFkYTSH2UwjlwPFz+ljfm5krCN94bYJ2o9JGYfj6r1IGEhlFJlafXQZFas
8t2HhFlSlYoU/XqYYZVcFL9Kwr1XXu5hO1UPuwZqcs8HkjCi13W4xKgepCOV
TxdcJ+F6AG/mhnE9mKm3b3t3g4R52xr8D52ph5C/2g1Ho0nYriN2fcmsHkrr
Xlw0jSeh0a7czhiLehh0N+FKTCRhvualM18s62Fd9O3LgTsknItlOb3Huh54
PtmH7sog4Q47mReLdKyTPU/UyiEhyT/7Q7JNPXiYeXwOKSChqOCJkg06TmP9
dbelhIT0s0BZ1LYe2p4HnlgvI+GH0YX6I3T8OYJpM7GShD2dXsp99PH71GOq
3GtJGHbH7qMqHSv8PeBY1kDCK356Q5fp+Wzq0g5/biFh5oNPAp5W9RDhfryP
r52E3H1rm6Xp9VaIFl+z6ab/f+dwo9q8HsY+ShDS+0i4pZ7/zTq9/03ZNe9H
B0i455s6z1bTehAyU046MEzCatG3IUOn68GAtV1Lf4yE8so8fI6G9eD7XHv9
5gQJjyvRJJoN6iE74sX9rmkSKpbkPx3Tq4duNRNrho8k1LkdwPtIpx6+/pnc
D5/p43Pk7K206oGtzr7jygIJLxLEHvWo14OjqIfw0goJS9QuGy+Q6iH249ob
sXUS2hdl/ymSr4farMBYp38kDDz/wENIph6YWGN+TDEpo4rCgaSrwvUg8fxA
IccuZbw+wVd0gq8ejCPSTE32KuPUvgSj2WP1UPCnqPn5IWUUN79h4naA7sda
CbedR5VxfdWb3XoP3Y9uNTya3Mp471io4cFt9UD52HajWUgZ9zEx7nn9qw5m
+idP3ldURl2trAMdE3WwO8KecVZFGa8FMP9cHq4DWbX5Wl41ZTwdu1v627M6
uF67xnFXRxllBTgqsKkOeLIOfIo0V8ZzMlFbre/UwUUFksM1a2X6+0zWMCyu
Dupe2s24nVVGRoeDg9fo+wGNsfK9ibMyflkb1f5E3z98zhtM8V9VRoP5v7F3
aXXQKxMz1pqmjOGDd5uerdQCa3+1SU0mnY+gF3rSc7Vg5TgxUpxLrz/l+rzL
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
/01AG9bKRJqblz5ManNY
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{10., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{10, 60}, {1.5060806465955197`*^-14, 6.288770745266278*^-6}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.667098966631329*^9, 3.66709899952222*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"ef", ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.667098643470001*^9, 3.6670986833922586`*^9}, 
   3.6670989341623435`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
n/ZmNAv19Dwaq46Xh5Y2eVeeH1nI7ItdAiNfHqZt0noYc1modvnJ+pMV8nB7
9W/+9D9ZSEbK6Zr3DXkI1ZtX/bSYhfI0n1tZt8nDq64VKReXs9CStct7jRfy
YOjj7veKwEEHXh9fPyIP4iUsFLSUhd6fpAkvz8rD8+xjReF/s5BDQX/lKJ8C
ZPJ48XyZz0L3ajxNeiQVgF3nqvl4KgupP3j/ol5ZAWxcIoZlvmahsgHvo2cM
FaD0YtW30Q8E/9mPPKk2CjCW6Ker+Irgv9rvdOBeBTDu3N/c10nwV/yi5XJU
AbaF7Mjmv0PwNz38yDiWOJ8y9/DaZYL/nnFvhVwF2KirXfn6NME/6NhvoTIF
WPOd7BeXQfAtD1XuxwrgfBavcNlP8G2cudf6VAFEemfbMqwJvr3HXauHFeCc
tcL23ZoEP67o1KgVijBR/ebI0b+ZyGHDv03eEorEPJBa/fp9JrqnFX9rt5Ii
lPq+c399PxOV+SR9ktytCGaqv5LKEjIR51f61XeuinBAdJn3vncmYubkRlYe
UoRDT56M16JMlNHAWaWdpghY68340kIGChO6pmP/nyIY8Qmuvu6dgQLLby2K
v1KE8/v5cYpBBvLXbX7YP6IIwe+3DhsLZyDPff95BPAqgd+2oWrP+nRkdXMg
OdlCCQrPmNTc/p2GYPewvS1VCZ4EsmamiP40HhxdL+qrBE4Bb6fkC9OQJv/0
5bIkJVhxccE4YUcakt4r8LKpVQnq9CxXRjqkokluPcUptBVKTm5IkQtIRmNF
RpMNjlvh+PHP0SHKyejTDrgdt38rGEhV4YnPSahvjx151amtYDTl0B3tnYTa
qg9EbL23FSwWbv4hkxNRkXNeu6eJMrxULA2sXhGPTM9+OfjIUAVGymtMTv0J
R7Olbc4fbVSA9wTIDFuEoxrOGbO/e1UgmVv/0r6cMCRJp0qpxalA2UV3uWfS
oWgyHnfRW1WgVGrVUwWvQFThydam2W6DqyEyu7rDvBGP1G6uLx7bQaRgxRVH
DUd8W1z++3LgdriT16bvXU7BQSKLb6Xit8PEiuM8DlV78AB/XZ1txXYY+MuD
rW944FtzMv61I9shkUN3kx30xX4v5p8cP7YD/qPwvk5sDMadeVUlvKdUYehB
3Moe1Rjcvvy4/km+Kuwvqrp063UMvh/yo7eoQhVee08W5J6KxY0UQ95tbarg
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
R4o5qPZ6yK/lZRr4rjMOW1vIQf8DbPH/3Q==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 100}, {-0.022758879230854213`, 0.02442766991442173}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6670986485481815`*^9, 3.6670986839547253`*^9}, 
   3.667098934771679*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"nRange", "=", "20"}], ";"}]], "Input",
 CellChangeTimes->{{3.666085994560072*^9, 3.666086002478659*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"p4Ture", "[", 
    RowBox[{"n_", ",", "b_"}], "]"}], "[", 
   RowBox[{"Z_", ",", "\[Gamma]_", ",", "\[Eta]_", ",", "opt___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Z", " ", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"(", 
       SuperscriptBox[
        RowBox[{"Laplacian", "[", 
         RowBox[{
          RowBox[{"efVs2", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", 
          RowBox[{"{", "r", "}"}]}], "]"}], "2"], ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "0", ",", "b"}], "}"}], ",", "opt"}], "]"}]}], "+", 
   RowBox[{
    FractionBox["\[Gamma]", "a"], 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"efVs2", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "2"], " ", 
       RowBox[{"\[Delta]a", "[", "r", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "0", ",", "b"}], "}"}], ",", "opt"}], "]"}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"+", "\[Eta]"}], " ", "a", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"efVs2", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "2"], " ", 
         RowBox[{"Laplacian", "[", 
          RowBox[{
           RowBox[{"\[Delta]a", "[", "r", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
           "\"\<Spherical\>\""}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0", ",", "b"}], "}"}], ",", "opt"}], "]"}]}], 
     "*)"}]}]}]}]], "Input",
 CellChangeTimes->{3.6670389659494953`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"REAL", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"r", " ", 
           RowBox[{"RS", "[", 
            RowBox[{"n", ",", "r"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "2"}], "}"}]}], "]"}], "2"], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "nRange"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"REF", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"r", " ", 
           RowBox[{"RS", "[", 
            RowBox[{"n", ",", "r"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "2"}], "}"}]}], "]"}], "2"], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"nRange", "-", "2"}], ",", "nRange"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6656209865106063`*^9, 3.6656209874949923`*^9}, {
   3.6656210269117637`*^9, 3.6656210417708163`*^9}, 3.665621094970067*^9, {
   3.6656211860955453`*^9, 3.665621188693664*^9}, {3.66562914005646*^9, 
   3.665629155453659*^9}, {3.666085987809308*^9, 3.6660860069618225`*^9}, {
   3.666425553503518*^9, 3.66642555593924*^9}, {3.6664259335278482`*^9, 
   3.6664259706530476`*^9}, {3.6664260086478753`*^9, 3.6664260113317704`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Matrix element in ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["V", "eff", 
    RowBox[{"(", 
     SuperscriptBox["a", "2"], ")"}]], TraditionalForm]]]
}], "Subsection",
 CellChangeTimes->{{3.6664249424630938`*^9, 3.6664249478939285`*^9}, {
  3.6664252784993644`*^9, 3.6664252790737567`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"efVs1", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ef", ",", "am"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ef", "=", 
      RowBox[{"Eigenfun", "[", 
       RowBox[{
        RowBox[{"Vs1", "[", 
         RowBox[{"r", ",", "a", ",", "c1"}], "]"}], ",", "energyVs1"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"am", "=", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"f", "[", "r", "]"}], "2"], "/.", "#"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", 
             RowBox[{"1.", "*", 
              SuperscriptBox["10", 
               RowBox[{"-", "50"}]]}], ",", "2000"}], "}"}]}], "]"}], 
         RowBox[{"-", "0.5"}]], "&"}], "/@", "ef"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"am", "[", 
          RowBox[{"[", 
           RowBox[{"2", "#"}], "]"}], "]"}], "=", 
         RowBox[{"-", 
          RowBox[{"am", "[", 
           RowBox[{"[", 
            RowBox[{"2", "#"}], "]"}], "]"}]}]}], ")"}], "&"}], "@", 
      RowBox[{"Range", "@", "10"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"am", "[", 
          RowBox[{"[", "n", "]"}], "]"}], 
         RowBox[{"f", "[", "r", "]"}]}], "/.", 
        RowBox[{"ef", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "20"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6664252614413176`*^9, 3.666425268256119*^9}, {
  3.666425298878742*^9, 3.6664253271607103`*^9}, {3.666425393050231*^9, 
  3.66642539818886*^9}, {3.666432459794455*^9, 3.6664325667159605`*^9}, {
  3.6664327638671465`*^9, 3.6664327649479113`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "precw"}], "MessageName"], ":", 
  " ", "\<\"The precision of the differential equation \
(\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\
\"-\\\", \\\"0.4393934048414865`\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{\\\"0.1`\\\", \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Erf\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}]}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"f\\\", \\\"[\\\", \
\\\"r\\\", \\\"]\\\"}]}], \\\"-\\\", FractionBox[RowBox[{SuperscriptBox[\\\"f\
\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \\\
\"r\\\", \\\"]\\\"}], \\\"20\\\"]}], \\\"\[Equal]\\\", \
RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0500078698243863935055737602971012823197346799121081117866`30.\\\"}], \
\\\" \\\", RowBox[{\\\"f\\\", \\\"[\\\", \\\"r\\\", \\\"]\\\"}]}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"f\\\", \\\"[\\\", \\\"2000\\\", \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"9.999999999999999`*^-51\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"f\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", \\\"2000\\\", \\\"]\\\"}], \\\"\
\[Equal]\\\", RowBox[{\\\"-\\\", \\\"9.999999999999999`*^-51\\\"}]}]}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}]\\)\[NoBreak]) is less than \
WorkingPrecision (\[NoBreak]\\!\\(\\*RowBox[{\\\"50.`\\\"}]\\)\[NoBreak]). \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/precw\\\", \
ButtonNote -> \\\"NDSolve::precw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.667039463915553*^9, 3.6670477941922064`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "precw"}], "MessageName"], ":", 
  " ", "\<\"The precision of the differential equation \
(\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\
\"-\\\", \\\"0.4393934048414865`\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{\\\"0.1`\\\", \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Erf\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}]}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"f\\\", \\\"[\\\", \
\\\"r\\\", \\\"]\\\"}]}], \\\"-\\\", FractionBox[RowBox[{SuperscriptBox[\\\"f\
\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \\\
\"r\\\", \\\"]\\\"}], \\\"20\\\"]}], \\\"\[Equal]\\\", \
RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0125002441801421361773951351802253734391378692937613518092`30.\\\"}], \
\\\" \\\", RowBox[{\\\"f\\\", \\\"[\\\", \\\"r\\\", \\\"]\\\"}]}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"f\\\", \\\"[\\\", \\\"2000\\\", \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"9.999999999999999`*^-51\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"f\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", \\\"2000\\\", \\\"]\\\"}], \\\"\
\[Equal]\\\", RowBox[{\\\"-\\\", \\\"9.999999999999999`*^-51\\\"}]}]}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}]\\)\[NoBreak]) is less than \
WorkingPrecision (\[NoBreak]\\!\\(\\*RowBox[{\\\"50.`\\\"}]\\)\[NoBreak]). \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/precw\\\", \
ButtonNote -> \\\"NDSolve::precw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.667039463915553*^9, 3.6670521196993504`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "precw"}], "MessageName"], ":", 
  " ", "\<\"The precision of the differential equation \
(\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\
\"-\\\", \\\"0.4393934048414865`\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{\\\"0.1`\\\", \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Erf\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}]}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"f\\\", \\\"[\\\", \
\\\"r\\\", \\\"]\\\"}]}], \\\"-\\\", FractionBox[RowBox[{SuperscriptBox[\\\"f\
\\\", \\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \\\
\"r\\\", \\\"]\\\"}], \\\"20\\\"]}], \\\"\[Equal]\\\", \
RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0055555876691800979146256771734649535210349295397217383198`30.\\\"}], \
\\\" \\\", RowBox[{\\\"f\\\", \\\"[\\\", \\\"r\\\", \\\"]\\\"}]}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"f\\\", \\\"[\\\", \\\"2000\\\", \\\"]\\\"}], \
\\\"\[Equal]\\\", \\\"9.999999999999999`*^-51\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"f\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", \\\"2000\\\", \\\"]\\\"}], \\\"\
\[Equal]\\\", RowBox[{\\\"-\\\", \\\"9.999999999999999`*^-51\\\"}]}]}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}]\\)\[NoBreak]) is less than \
WorkingPrecision (\[NoBreak]\\!\\(\\*RowBox[{\\\"50.`\\\"}]\\)\[NoBreak]). \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/precw\\\", \
ButtonNote -> \\\"NDSolve::precw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.667039463915553*^9, 3.6670563250766506`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\
\\\", \\\"::\\\", \\\"precw\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be \
suppressed during this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.667039463915553*^9, 3.6670563252016506`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.667039478129135*^9, 3.6670803551586547`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"DumpSave", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\ASUS\\\\Documents\\\\DataDump_Coulomb_7_efVs1_2nd.mx\>\"\
", ",", "efVs1"}], "]"}]], "Input",
 CellChangeTimes->{{3.6670477976352744`*^9, 3.6670478378959556`*^9}}],

Cell[BoxData[{
 RowBox[{"AbsoluteTiming", "@", 
  RowBox[{"GraphicsGrid", "@", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"RS", "[", 
              RowBox[{"n", ",", "r"}], "]"}], "r"}], ")"}], ",", 
           RowBox[{"efVs1", "[", "r", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "2000"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", "Orange"}], "}"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "20"}], "}"}]}], "]"}], ",", "4"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "@", 
  RowBox[{"GraphicsGrid", "@", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"RS", "[", 
             RowBox[{"n", ",", "r"}], "]"}], "r"}], ")"}], "-", 
          RowBox[{"efVs1", "[", "r", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "2000"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "20"}], "}"}]}], "]"}], ",", "4"}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.6664327047514205`*^9, 3.666432728046855*^9}}],

Cell[BoxData[{
 RowBox[{"FALSEVs1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"efVs1", "[", 
          RowBox[{"[", "#", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "2"}], "}"}]}], "]"}], "2"], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "0", ",", "2000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"MaxRecursion", "\[Rule]", "30"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "50"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "30"}]}], "}"}]}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "@", "nRange"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"%", ",", "6"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Abs", "@", 
   FractionBox[
    RowBox[{"REAL", "-", "FALSEVs1"}], "REAL"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"%", ",", "6"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.665620964976464*^9, {3.6656213689712443`*^9, 3.6656213749244127`*^9}, 
   3.666086013352332*^9, {3.6664255042677574`*^9, 3.66642556456733*^9}, {
   3.6664256546008983`*^9, 3.666425655310399*^9}}],

Cell[BoxData[
 RowBox[{"RESVs1", "=", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "@", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"p4Ture", "[", 
            RowBox[{"#", ",", "2000"}], "]"}], "[", 
           RowBox[{"Z", ",", "\[Gamma]", ",", "\[Eta]", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"MaxRecursion", "\[Rule]", "30"}], ",", 
              RowBox[{"WorkingPrecision", "\[Rule]", "50"}], ",", 
              RowBox[{"AccuracyGoal", "\[Rule]", "30"}]}], "}"}]}], "]"}], 
          "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{"10", ",", "15", ",", "20"}], "}"}]}], ")"}], "\[Equal]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"REF", "[", 
           RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ")"}]}], "]"}]}], 
    RowBox[{"(*", 
     RowBox[{"/.", 
      RowBox[{"Z", "\[Rule]", "1"}]}], "*)"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Z", ",", "1.1", ",", "1.12"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Gamma]", ",", "0", ",", "100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Eta]", ",", "100", ",", 
        RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "50"}], ",", 
    RowBox[{"AccuracyGoal", "\[Rule]", "6"}], ",", 
    RowBox[{"PrecisionGoal", "\[Rule]", "6"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.666425650726163*^9, 3.666425651611788*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p4Vs1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"p4Ture", "[", 
        RowBox[{"#", ",", "2000"}], "]"}], "[", 
       RowBox[{"Z", ",", "\[Gamma]", ",", "\[Eta]", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"MaxRecursion", "\[Rule]", "30"}], ",", 
          RowBox[{"WorkingPrecision", "\[Rule]", "50"}], ",", 
          RowBox[{"AccuracyGoal", "\[Rule]", "30"}]}], "}"}]}], "]"}], "&"}], 
     "/@", 
     RowBox[{"Range", "@", "nRange"}]}], "/.", "RESVs1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"%", ",", "6"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Abs", "[", 
   FractionBox[
    RowBox[{"p4Vs1", "-", "REAL"}], "REAL"], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"%", ",", "6"}], "]"}]}], "Input",
 CellChangeTimes->{{3.666425658556692*^9, 3.6664256653835115`*^9}, {
  3.666432630356894*^9, 3.666432631081393*^9}}],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ef", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"efunction", "=", 
      RowBox[{"Range", "@", "20"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SetSharedVariable", "[", "efunction", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"efunction", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "=", 
         RowBox[{"First", "@", 
          RowBox[{"Eigenfunsin", "[", 
           RowBox[{
            RowBox[{"V", "[", "r", "]"}], ",", 
            RowBox[{"Table20REE", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", "r", ",", 
            RowBox[{"{", 
             RowBox[{"2000", ",", 
              RowBox[{"1.", "*", 
               SuperscriptBox["10", 
                RowBox[{"-", "50"}]]}]}], "}"}], ",", 
            RowBox[{"WorkingPrecision", "\[Rule]", "50"}], ",", 
            RowBox[{"PrecisionGoal", "\[Rule]", "15"}], ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "All"}], ",", 
            RowBox[{"MaxSteps", "\[Rule]", "Infinity"}], ",", 
            RowBox[{"MaxStepFraction", "\[Rule]", 
             SuperscriptBox["10", 
              RowBox[{"-", "4"}]]}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ef", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OddQ", "[", "n", "]"}], ",", "ef", ",", 
           RowBox[{"-", "ef"}]}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "15"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"efunction", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "=", 
         RowBox[{"First", "@", 
          RowBox[{"Eigenfunsin", "[", 
           RowBox[{
            RowBox[{"V", "[", "r", "]"}], ",", 
            RowBox[{"Table20REE", "[", 
             RowBox[{"[", "n", "]"}], "]"}], ",", "r", ",", 
            RowBox[{"{", 
             RowBox[{"4000", ",", 
              RowBox[{"1.", "*", 
               SuperscriptBox["10", 
                RowBox[{"-", "50"}]]}]}], "}"}], ",", 
            RowBox[{"WorkingPrecision", "\[Rule]", "50"}], ",", 
            RowBox[{"PrecisionGoal", "\[Rule]", "15"}], ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "All"}], ",", 
            RowBox[{"MaxSteps", "\[Rule]", "Infinity"}], ",", 
            RowBox[{"MaxStepFraction", "\[Rule]", 
             SuperscriptBox["10", 
              RowBox[{"-", "4"}]]}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ef", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OddQ", "[", "n", "]"}], ",", "ef", ",", 
           RowBox[{"-", "ef"}]}], "]"}]}], ";"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "16", ",", "20"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "efunction"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6671131804568896`*^9, 3.667113212441477*^9}, {
  3.6671138131002584`*^9, 3.66711381361592*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "precw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The precision of the differential equation \
(\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{\\\"-\\\", FractionBox[RowBox[{\\\"0.1`\\\", \
\\\" \\\", RowBox[{\\\"f\\\", \\\"[\\\", \\\"r\\\", \\\"]\\\"}]}], \
\\\"r\\\"]}], \\\"-\\\", FractionBox[RowBox[{SuperscriptBox[\\\"f\\\", \\\"\
\[Prime]\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \\\"r\\\", \
\\\"]\\\"}], \\\"20\\\"]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.05000000000000001`\\\"}], \\\" \\\", RowBox[{\\\"f\\\", \\\"[\\\", \
\\\"r\\\", \\\"]\\\"}]}]}], \\\",\\\", RowBox[{RowBox[{\\\"f\\\", \\\"[\\\", \
\\\"2000\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \
\\\"9.999999999999999`*^-51\\\"}], \\\",\\\", RowBox[{RowBox[{SuperscriptBox[\
\\\"f\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"2000\\\", \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"-\\\", \
\\\"9.999999999999999`*^-51\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"}\\\"}]}], \\\"}\\\"}]\\)) is less than WorkingPrecision \
(\\!\\(\\*RowBox[{\\\"50.`\\\"}]\\)).\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.6671139221480117`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "precw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The precision of the differential equation \
(\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{\\\"-\\\", FractionBox[RowBox[{\\\"0.1`\\\", \
\\\" \\\", RowBox[{\\\"f\\\", \\\"[\\\", \\\"r\\\", \\\"]\\\"}]}], \
\\\"r\\\"]}], \\\"-\\\", FractionBox[RowBox[{SuperscriptBox[\\\"f\\\", \\\"\
\[Prime]\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \\\"r\\\", \
\\\"]\\\"}], \\\"20\\\"]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.005555555555555557`\\\"}], \\\" \\\", RowBox[{\\\"f\\\", \\\"[\\\", \
\\\"r\\\", \\\"]\\\"}]}]}], \\\",\\\", RowBox[{RowBox[{\\\"f\\\", \\\"[\\\", \
\\\"2000\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \
\\\"9.999999999999999`*^-51\\\"}], \\\",\\\", RowBox[{RowBox[{SuperscriptBox[\
\\\"f\\\", \\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"2000\\\", \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"-\\\", \
\\\"9.999999999999999`*^-51\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"}\\\"}]}], \\\"}\\\"}]\\)) is less than WorkingPrecision \
(\\!\\(\\*RowBox[{\\\"50.`\\\"}]\\)).\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.667113922163637*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "precw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The precision of the differential equation \
(\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{\\\"-\\\", FractionBox[RowBox[{\\\"0.1`\\\", \
\\\" \\\", RowBox[{\\\"f\\\", \\\"[\\\", \\\"r\\\", \\\"]\\\"}]}], \
\\\"r\\\"]}], \\\"-\\\", FractionBox[RowBox[{SuperscriptBox[\\\"f\\\", \\\"\
\[Prime]\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \\\"r\\\", \
\\\"]\\\"}], \\\"20\\\"]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0020000000000000005`\\\"}], \\\" \\\", RowBox[{\\\"f\\\", \\\"[\\\", \\\
\"r\\\", \\\"]\\\"}]}]}], \\\",\\\", RowBox[{RowBox[{\\\"f\\\", \\\"[\\\", \\\
\"2000\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \\\"9.999999999999999`*^-51\\\"}], \
\\\",\\\", RowBox[{RowBox[{SuperscriptBox[\\\"f\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", \\\"2000\\\", \\\"]\\\"}], \\\"\
\[Equal]\\\", RowBox[{\\\"-\\\", \\\"9.999999999999999`*^-51\\\"}]}]}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}]\\)) is less than \
WorkingPrecision (\\!\\(\\*RowBox[{\\\"50.`\\\"}]\\)).\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.6671139221792626`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "precw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The precision of the differential equation \
(\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{\\\"-\\\", FractionBox[RowBox[{\\\"0.1`\\\", \
\\\" \\\", RowBox[{\\\"f\\\", \\\"[\\\", \\\"r\\\", \\\"]\\\"}]}], \
\\\"r\\\"]}], \\\"-\\\", FractionBox[RowBox[{SuperscriptBox[\\\"f\\\", \\\"\
\[Prime]\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \\\"r\\\", \
\\\"]\\\"}], \\\"20\\\"]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.0010204081632653062`\\\"}], \\\" \\\", RowBox[{\\\"f\\\", \\\"[\\\", \\\
\"r\\\", \\\"]\\\"}]}]}], \\\",\\\", RowBox[{RowBox[{\\\"f\\\", \\\"[\\\", \\\
\"2000\\\", \\\"]\\\"}], \\\"\[Equal]\\\", \\\"9.999999999999999`*^-51\\\"}], \
\\\",\\\", RowBox[{RowBox[{SuperscriptBox[\\\"f\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", \\\"2000\\\", \\\"]\\\"}], \\\"\
\[Equal]\\\", RowBox[{\\\"-\\\", \\\"9.999999999999999`*^-51\\\"}]}]}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"}\\\"}]\\)) is less than \
WorkingPrecision (\\!\\(\\*RowBox[{\\\"50.`\\\"}]\\)).\"\>"}]], "Message", \
"MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.667113922194889*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Auxiliary_1",
WindowSize->{1318, 808},
WindowMargins->{{Automatic, 40}, {54, Automatic}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (February 25, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3246, 92, 321, "Input",
 InitializationCell->True],
Cell[3807, 114, 790, 26, 56, "Input"],
Cell[CellGroupData[{
Cell[4622, 144, 412, 11, 31, "Input"],
Cell[5037, 157, 8544, 152, 236, "Output"]
}, Open  ]],
Cell[13596, 312, 276, 7, 31, "Input"],
Cell[13875, 321, 16553, 402, 1009, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[30453, 727, 734, 20, 74, "Input",
 InitializationCell->True],
Cell[31190, 749, 1609, 33, 86, "Output"]
}, Closed]],
Cell[32814, 785, 2897, 74, 155, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[35736, 863, 270, 8, 70, "Section"],
Cell[36009, 873, 207, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[36241, 881, 4243, 93, 203, "Input"],
Cell[40487, 976, 2039, 30, 42, "Message"],
Cell[42529, 1008, 62229, 1042, 263, "Output"],
Cell[104761, 2052, 1374, 21, 50, "Message"],
Cell[106138, 2075, 512, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106687, 2087, 1008, 24, 33, "Input"],
Cell[107698, 2113, 312, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108047, 2123, 175, 4, 31, "Input"],
Cell[108225, 2129, 82, 1, 31, "Output"]
}, Open  ]],
Cell[108322, 2133, 2168, 55, 220, "Input"],
Cell[CellGroupData[{
Cell[110515, 2192, 431, 12, 33, "Input"],
Cell[110949, 2206, 23261, 393, 220, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134247, 2604, 238, 6, 31, "Input"],
Cell[134488, 2612, 22326, 378, 222, "Output"]
}, Open  ]],
Cell[156829, 2993, 139, 3, 31, "Input"],
Cell[156971, 2998, 1650, 48, 66, "Input"],
Cell[158624, 3048, 1673, 45, 55, "Input"],
Cell[CellGroupData[{
Cell[160322, 3097, 315, 9, 51, "Subsection"],
Cell[CellGroupData[{
Cell[160662, 3110, 1980, 56, 140, "Input"],
Cell[162645, 3168, 2176, 32, 63, "Message"],
Cell[164824, 3202, 2176, 32, 63, "Message"],
Cell[167003, 3236, 2176, 32, 63, "Message"],
Cell[169182, 3270, 572, 10, 24, "Message"],
Cell[169757, 3282, 101, 1, 31, "Output"]
}, Open  ]],
Cell[169873, 3286, 237, 5, 31, "Input"],
Cell[170113, 3293, 1710, 47, 72, "Input"],
Cell[171826, 3342, 1217, 33, 110, "Input"],
Cell[173046, 3377, 1641, 44, 92, "Input"],
Cell[174690, 3423, 984, 28, 108, "Input"],
Cell[175677, 3453, 44, 1, 4, "PageBreak",
 PageBreakBelow->True],
Cell[CellGroupData[{
Cell[175746, 3458, 3179, 76, 287, "Input"],
Cell[178928, 3536, 1433, 24, 42, "Message"],
Cell[180364, 3562, 1432, 24, 42, "Message"],
Cell[181799, 3588, 1435, 24, 42, "Message"],
Cell[183237, 3614, 1433, 24, 42, "Message"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

