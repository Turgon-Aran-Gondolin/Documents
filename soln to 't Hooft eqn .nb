(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    150655,       2966]
NotebookOptionsPosition[    148818,       2906]
NotebookOutlinePosition[    149153,       2921]
CellTagsIndexPosition[    149110,       2918]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"BSW", "-", 
   RowBox[{
   "Wulthopp", " ", "method", " ", "to", " ", "numerically", " ", "solve", 
    " ", 
    RowBox[{"the", " ", "'"}], "t", " ", "Hooft", " ", 
    RowBox[{"eqn", "."}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.659052402598587*^9, 3.659052463150651*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    SuperscriptBox["Mn", "2"], 
    SubscriptBox["\[Phi]", "n"], 
    RowBox[{"(", "x", ")"}]}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["m1", "2"], "-", 
         SuperscriptBox["\[Beta]", "2"]}], "x"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["m2", "2"], "-", 
         SuperscriptBox["\[Beta]", "2"]}], 
        RowBox[{"1", "-", "x"}]]}], ")"}], 
     SubscriptBox["\[Phi]", "n"], 
     RowBox[{"(", "x", ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[Beta]", "2"], 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Integral]", "0"], "1"], 
      RowBox[{"dy", " ", 
       SubscriptBox["\[Phi]", "n"], 
       RowBox[{"(", "y", ")"}], " ", 
       FractionBox["PV", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"y", "-", "x"}], ")"}], "2"]]}]}]}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.662368746261691*^9, 3.6623688704856367`*^9}}],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{"$FrontEnd", ",", 
   RowBox[{"CommonDefaultFormatTypes", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", "StandardForm"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.65630059895203*^9, 3.6563006333167763`*^9}, {
  3.656300748822282*^9, 3.656300771413851*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"m1", ",", "m2", ",", "\[Beta]", ",", "Nx"}], "]"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"\[Beta]", "=", 
    RowBox[{"1", " ", "unit"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nx", "=", "500"}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "size", " ", "of", " ", "the", " ", "working", " ", "matrix"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"\[Beta]", "=", "1"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"the", " ", "mass", " ", "unit"}], ",", 
    RowBox[{
     RowBox[{"definition", " ", 
      SuperscriptBox["\[Beta]", "2"]}], "=", 
     RowBox[{
      FractionBox[
       SuperscriptBox["g", "2"], 
       RowBox[{"2", "Pi"}]], "Nc"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"m1", "=", 
   RowBox[{"2.11", "*", "\[Beta]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "m1", " ", "and", " ", "m2", " ", "are", " ", "the", " ", "bare", " ", 
     "masses", " ", "of", " ", "the", " ", "quark", " ", "and", " ", "the", 
     " ", "anti"}], "-", 
    RowBox[{"quark", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"m2", "=", 
   RowBox[{"2.11", "*", "\[Beta]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.656316908677919*^9, 3.656316955757666*^9}, {
   3.656386441333725*^9, 3.656386506094369*^9}, {3.656386543964497*^9, 
   3.656386581412278*^9}, {3.656642892958535*^9, 3.656642896886086*^9}, {
   3.6566429625184937`*^9, 3.656642962933879*^9}, {3.656736162785871*^9, 
   3.6567361979139757`*^9}, {3.6567362478735933`*^9, 3.656736310601686*^9}, 
   3.656803242918009*^9, 3.656803413706811*^9, {3.6572295478159237`*^9, 
   3.657229547990348*^9}, {3.657323549090542*^9, 3.65732356921782*^9}, {
   3.657323790719941*^9, 3.657323800650324*^9}, {3.657323831679906*^9, 
   3.657323880934112*^9}, {3.6573239397601233`*^9, 3.657323940182811*^9}, {
   3.6573241974141893`*^9, 3.657324198196575*^9}, {3.657332871505336*^9, 
   3.657332872168791*^9}, {3.65733578469104*^9, 3.6573357859466143`*^9}, {
   3.657343041141307*^9, 3.6573430507805853`*^9}, {3.657343162860622*^9, 
   3.6573431633221083`*^9}, {3.657343402322651*^9, 3.657343415265828*^9}, {
   3.657343797648039*^9, 3.657343800671328*^9}, {3.657344079781945*^9, 
   3.657344083253229*^9}, {3.657344164125094*^9, 3.6573441713245983`*^9}, {
   3.657344588930624*^9, 3.6573446206897097`*^9}, {3.6573446887216253`*^9, 
   3.657344690169435*^9}, {3.657431652544628*^9, 3.657431664583353*^9}, {
   3.657431974916284*^9, 3.657431991181251*^9}, {3.6575097099322577`*^9, 
   3.6575097244124527`*^9}, {3.657783161314728*^9, 3.657783244337932*^9}, {
   3.6577832966343317`*^9, 3.657783326896006*^9}, {3.657783600040719*^9, 
   3.657783633794654*^9}, {3.657783677159976*^9, 3.657783680911355*^9}, {
   3.657783963781493*^9, 3.657783999212841*^9}, {3.657784443770296*^9, 
   3.657784492938223*^9}, {3.6577845515305443`*^9, 3.65778455986611*^9}, {
   3.6577848473920307`*^9, 3.657784849910719*^9}, {3.657784965358389*^9, 
   3.657784969782008*^9}, {3.657785051286543*^9, 3.6577850818641644`*^9}, {
   3.6577854966918*^9, 3.657785499107218*^9}, {3.6577855802587442`*^9, 
   3.657785582050239*^9}, {3.657785618114484*^9, 3.657785620345777*^9}, {
   3.657785769322316*^9, 3.657785916399477*^9}, {3.657878566215637*^9, 
   3.6578785736543493`*^9}, {3.6578788110540447`*^9, 
   3.6578788127416983`*^9}, {3.657879225106694*^9, 3.6578792313930264`*^9}, {
   3.6590521744255466`*^9, 3.659052230665243*^9}, {3.6590522733522453`*^9, 
   3.659052280752428*^9}, {3.6590525216247787`*^9, 3.659052557902446*^9}, {
   3.6590657421860723`*^9, 3.659065742433242*^9}, {3.659066207534997*^9, 
   3.65906625984728*^9}, {3.6593228354600067`*^9, 3.659322835841441*^9}, {
   3.662079686039317*^9, 3.662079689190515*^9}, {3.662178648546401*^9, 
   3.6621786495853767`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"type", " ", "in", " ", "H", " ", "and", " ", "V"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.6575127554447002`*^9, 3.657512767167407*^9}, {
  3.659052480046866*^9, 3.6590524886379757`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HMatx", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"4", 
      RowBox[{"Min", "[", 
       RowBox[{"n", ",", "m"}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"n", "+", "m"}]], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["m1", "2"], "-", 
           SuperscriptBox["\[Beta]", "2"]}], ")"}]}], "+", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["m2", "2"], "-", 
          SuperscriptBox["\[Beta]", "2"]}], ")"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "Nx"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "Nx"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.656297292694029*^9, 3.656297328444622*^9}, {
   3.656297532381304*^9, 3.6562975385009823`*^9}, {3.6562982496639347`*^9, 
   3.65629825754429*^9}, {3.6562986083491287`*^9, 3.656298611309409*^9}, 
   3.656306427813835*^9, {3.656308273411078*^9, 3.656308279826683*^9}, {
   3.656308728591877*^9, 3.656308730175499*^9}, {3.6563088629673634`*^9, 
   3.656308866678895*^9}, {3.656309050293894*^9, 3.656309056461759*^9}, {
   3.656309090317932*^9, 3.656309093932808*^9}, {3.6563091716370077`*^9, 
   3.656309172388633*^9}, {3.6563168656481457`*^9, 3.656316890976489*^9}, {
   3.656316960871664*^9, 3.656316962830913*^9}, {3.65638642891074*^9, 
   3.656386435974999*^9}, {3.657323582308688*^9, 3.657323582318207*^9}, {
   3.6573237907426662`*^9, 3.657323800662451*^9}, {3.657509642653532*^9, 
   3.657509645901287*^9}, {3.657783362227844*^9, 3.6577833773389053`*^9}, {
   3.6577834354593163`*^9, 3.6577834660593576`*^9}, {3.6577835003871183`*^9, 
   3.6577835085618877`*^9}, {3.6577843695325947`*^9, 
   3.6577843719399757`*^9}, {3.6577844070677643`*^9, 3.657784414659824*^9}, {
   3.657784601219095*^9, 3.657784613457615*^9}, {3.657785554220749*^9, 
   3.65778557754007*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vMatx", "[", 
   RowBox[{"n_", ",", "m_"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"vMatx", "[", 
      RowBox[{
       RowBox[{"n", "-", "1"}], ",", 
       RowBox[{"m", "-", "1"}]}], "]"}], 
     FractionBox["m", 
      RowBox[{"m", "-", "1"}]]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"8", "m"}], 
      RowBox[{"n", "+", "m", "-", "1"}]], 
     RowBox[{"(", 
      FractionBox[
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"n", "+", "m"}]]}], "2"], ")"}]}]}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vMatx", "[", 
    RowBox[{"1", ",", "m_"}], "]"}], ":=", 
   RowBox[{"4", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"m", "+", "1"}]]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vMatx", "[", 
    RowBox[{"n_", ",", "1"}], "]"}], ":=", 
   RowBox[{
    FractionBox["4", "n"], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"n", "+", "1"}]]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6563063733898773`*^9, 3.6563064249199944`*^9}, 
   3.656308181984497*^9, {3.656308387562365*^9, 3.656308393881515*^9}, {
   3.656308563609952*^9, 3.656308596943881*^9}, {3.6563086668482122`*^9, 
   3.656308696160071*^9}, {3.656736319465687*^9, 3.6567363261603327`*^9}, {
   3.656736356901823*^9, 3.656736363169319*^9}, {3.656800123405319*^9, 
   3.656800133539298*^9}, {3.657323837501042*^9, 3.657323839505966*^9}, 
   3.65733369411416*^9, {3.6573337332337627`*^9, 3.65733376097989*^9}, {
   3.657335820384487*^9, 3.657335835168932*^9}, 3.6573371885458612`*^9, {
   3.6573444577451677`*^9, 3.6573444678459473`*^9}, {3.657351063036007*^9, 
   3.65735107174329*^9}, {3.657431671966507*^9, 3.6574316825099983`*^9}, {
   3.657432020426366*^9, 3.6574320539635353`*^9}, {3.657432107849242*^9, 
   3.6574321093594427`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"VMatx", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"vMatx", "[", 
      RowBox[{"n", ",", "m"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "Nx"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "Nx"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6563084813295383`*^9, 3.6563085197214937`*^9}, {
   3.656308620840941*^9, 3.656308622144807*^9}, {3.656308709424307*^9, 
   3.6563087136554813`*^9}, 3.656308747847672*^9, {3.656309060925702*^9, 
   3.656309100220211*^9}, {3.656309166604272*^9, 3.656309167403841*^9}, {
   3.656316874143021*^9, 3.656316878358219*^9}, {3.656316964494142*^9, 
   3.6563169691260443`*^9}, {3.656803207290391*^9, 3.656803209986068*^9}, {
   3.6573235823469553`*^9, 3.657323582353169*^9}, 3.657323615505949*^9, {
   3.657333737244397*^9, 3.6573337583082323`*^9}, {3.6573371947815943`*^9, 
   3.657337227219749*^9}, {3.657343882056507*^9, 3.657343890679265*^9}, 
   3.65734409167073*^9, {3.657344175486101*^9, 3.657344177141325*^9}, 
   3.6573510606063347`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"solve", " ", "the", " ", "eigen", " ", "problem"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.657512771028552*^9, 3.657512790037932*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
   RowBox[{"Eigensystem", "[", 
    RowBox[{"N", "[", 
     RowBox[{"HMatx", "+", "VMatx"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6563088389017067`*^9, 3.656308851340508*^9}, {
   3.656308916566787*^9, 3.656308940014678*^9}, 3.656316905935354*^9, {
   3.657432091013752*^9, 3.657432091371642*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"the", " ", "list", " ", "of", " ", "eigenvalues"}], ",", " ", 
   RowBox[{"the", " ", "first", " ", "6", " ", "excitations"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.657512796291534*^9, 3.657512807773508*^9}, {
  3.659052251968075*^9, 3.659052263623603*^9}, {3.6590523496795883`*^9, 
  3.6590523587190332`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SqrtBox["vals"], "\[Beta]"}], "//", "Sort"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "12"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.657343150091874*^9, 3.657343150675147*^9}, {
   3.6573433284750347`*^9, 3.657343336778429*^9}, {3.657344765977285*^9, 
   3.657344768048853*^9}, {3.6575096739966803`*^9, 3.657509674747406*^9}, 
   3.657783707167816*^9, {3.6577837461505737`*^9, 3.6577837592297287`*^9}, {
   3.657783865262384*^9, 3.6577839311098137`*^9}, {3.657783977973899*^9, 
   3.6577839788288507`*^9}, {3.6577848764703703`*^9, 3.657784877494174*^9}, {
   3.657785011582287*^9, 3.6577850175974693`*^9}, {3.657785069093322*^9, 
   3.657785069748934*^9}, {3.657785207724845*^9, 3.657785214987932*^9}, {
   3.6577852730763807`*^9, 3.657785273868103*^9}, {3.6577853111971483`*^9, 
   3.657785311587915*^9}, {3.657785423420409*^9, 3.657785429836322*^9}, {
   3.657785504611249*^9, 3.6577855048187237`*^9}, {3.6577857961689987`*^9, 
   3.657785797648512*^9}, {3.6577859398647423`*^9, 3.657785951848133*^9}, {
   3.657879242027525*^9, 3.65787924269097*^9}, {3.659927584395658*^9, 
   3.65992758496881*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4.914088846666511`", ",", "6.168315715078442`", ",", "7.058114875970535`", 
   ",", "7.82947858876874`", ",", "8.504641371169878`", ",", 
   "9.124299701523242`", ",", "9.693680023348337`", ",", 
   "10.228752424681165`", ",", "10.73151220302938`", ",", 
   "11.21024208015302`", ",", "11.66590500352094`", ",", 
   "12.10347520492104`"}], "}"}]], "Output",
 CellChangeTimes->{{3.657343151490694*^9, 3.657343166075664*^9}, {
   3.657343332752213*^9, 3.657343338084137*^9}, {3.657343407793621*^9, 
   3.6573434179505453`*^9}, 3.6573438112887907`*^9, {3.657343885092284*^9, 
   3.65734389382876*^9}, 3.6573440946439867`*^9, 3.657344179953517*^9, {
   3.6573444736175823`*^9, 3.657344492703066*^9}, {3.657344596807176*^9, 
   3.657344625741992*^9}, 3.6573446930867043`*^9, 3.6573447687597303`*^9, 
   3.657351079166313*^9, 3.657431686126972*^9, {3.657432026362198*^9, 
   3.6574320567479763`*^9}, {3.657432096922822*^9, 3.6574321126067677`*^9}, {
   3.6575096605660353`*^9, 3.6575096754694653`*^9}, {3.657509714385029*^9, 
   3.657509727924184*^9}, 3.657531796107718*^9, 3.657783174629057*^9, {
   3.657783209249997*^9, 3.657783248919382*^9}, 3.657783381502706*^9, {
   3.657783455525043*^9, 3.65778348299368*^9}, {3.6577836713261833`*^9, 
   3.657783683547021*^9}, {3.657783748417467*^9, 3.657783759982511*^9}, {
   3.657783867933694*^9, 3.6577839318703413`*^9}, 3.6577839817904053`*^9, 
   3.657784496324244*^9, 3.6577845641001453`*^9, 3.6577846669819517`*^9, {
   3.65778485357953*^9, 3.6577848783020477`*^9}, {3.657785001342984*^9, 
   3.657785018725424*^9}, {3.657785065279667*^9, 3.6577850708696527`*^9}, 
   3.657785215716031*^9, {3.657785277274829*^9, 3.657785280853281*^9}, 
   3.657785312453781*^9, 3.657785388559437*^9, {3.657785424025794*^9, 
   3.657785431244361*^9}, {3.657785501849468*^9, 3.657785505706517*^9}, 
   3.65778556101525*^9, 3.6577855924861917`*^9, 3.657785623611223*^9, 
   3.657785734914654*^9, {3.657785773555004*^9, 3.6577859215363073`*^9}, 
   3.657785952476837*^9, 3.65787857935428*^9, 3.657878816563136*^9, {
   3.657879236418907*^9, 3.657879243169561*^9}, 3.6590521955624247`*^9, 
   3.659052297052588*^9, 3.6590655467115307`*^9, 3.659066909984065*^9, 
   3.659322856955262*^9, 3.659327081188828*^9, 3.659927603673678*^9, 
   3.660864510505291*^9, 3.662078888690361*^9, 3.6621792402611427`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "construct", " ", "the", " ", "wave", " ", "functions", " ", "and", " ", 
   "plot"}], "*)"}]], "Input",
 CellChangeTimes->{{3.657512814772626*^9, 3.657512881917996*^9}, {
  3.657531824238019*^9, 3.657531824613532*^9}, {3.6590523052324963`*^9, 
  3.659052307727664*^9}, {3.6590661885498877`*^9, 3.6590661973255*^9}}],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"g", "[", "j", "]"}], "=", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"i", " ", 
          RowBox[{"ArcCos", "[", 
           RowBox[{
            RowBox[{"2", "x"}], "-", "1"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "Nx"}], "}"}]}], "]"}], ",", 
      RowBox[{"vecs", "[", 
       RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", "Nx"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.659065628356748*^9, 3.659065673247036*^9}, {
  3.659065757833518*^9, 3.6590657656987667`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g", "[", "Nx", "]"}], ",", 
     RowBox[{"g", "[", 
      RowBox[{"Nx", "-", "1"}], "]"}], ",", 
     RowBox[{"g", "[", 
      RowBox[{"Nx", "-", "2"}], "]"}], ",", 
     RowBox[{"g", "[", 
      RowBox[{"Nx", "-", "3"}], "]"}], ",", 
     RowBox[{"g", "[", 
      RowBox[{"Nx", "-", "4"}], "]"}], ",", 
     RowBox[{"g", "[", 
      RowBox[{"Nx", "-", "5"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<ground state\>\"", ",", "\"\<1st excitation\>\"", ",", 
      "\"\<2nd excitation\>\"", ",", "\"\<3rd excitation\>\"", ",", 
      "\"\<4th excitation\>\"", ",", "\"\<5th excitation\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "->", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.659066458382326*^9, 3.659066512894219*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwd2Hc8Vu/7AHCjDyKyd/ZKKZU0PuVql4xCQkVm0wwJSTIa9qpIpRCRrYw+
uQgpGmaZz3MeJFmPPOexSn7n+/vrvN6v+/xxrvu+xv06yo4e5i5cHBwcgpwc
HP97HnYZaa35aWlgbKPFYWPypvpHwXFHuoweHFh+E+MvW6GkQGdMqcw+ODIq
5zB/1Rkrq6+5+mmYAvfKDzuve7jium3iWQ9ljsGGd4FBo7+8kEPsZ+KSog2I
jUf+0orwxdbxNzccNOxge+aqwP84/HF7y6aiBBlncGjwO3TmRTCq7nyUXZd2
BoKaVP5zuBSCK3L5HpOK56E2rkFdaUUo9of2Rx/XcIeYGa+i29oRWPOgbnO0
jA+oe89eCtkahXptV4rVT/pCeMgU7U9pND7nW6dTnXYZtjuOqyusj8UE3/tq
TEV/0NuTV7JOMB6djriJmWlcA/aYW5bZVCKGhkReuSMTBqWOx3KWPUhBZx+m
zG2ZJDAfkT8bP5WNfEmGT6Z+ZUK9UZVEZ2gFlrdsPHhQoRDy/41b+vz0LVqH
9vXURZaBdL41MC9+QI9ib537ZCWY5+/TqMpvwem4r+85OREEDT0GptM78H3t
O/yy4y2sKb0u/06tG8/7GwrajNdD873C2i0N/Vi7fOPSC7dG2L86b1m+HAOf
ZdT/lVVvgpVbVKWN4gZxl+SbpxYFH6FIJ/qKF/076jT2VbzT/gICDfZX05VG
sGOXxeTzyRZwXsvvOHxrFF35L7Z16raB9xon7sfl49jcZfVGKKYdPlptef3m
9yRaHLBmDA11wEjo0j8Dt6dQPz3SKl3tK0gVbUh55PULib+JHeeCv4F0Zcdj
tJzG74ZfMiTrumCp1ne5mCgL1SI1Y+Pfd0GQvvQhAQkWOn8MDljxuQtO+qdE
cEqzcMBU14yruwummjvmfqxiIc0i/u/EZBfIKXKNpa1mYZethU2DbDcE6yX9
zt3Fwiavb0I+l7qB/rNh5LAbC4tS6P6tyj1w82eQnX8NC11Xy/ds1OwBRuZr
6e9vWahVab09aW0PNG1OoZk2sPBxV+vC8S09YF3UkizfxMIYqfrAPuMeiO1Q
8k9vZ6Fbck7QD78eaj+NrfYPs1A73itk8VMPvB5WbF7GT+KwUgHDrr0HOtYV
869fQeLTotHdNV09MFG+Xs1KiETZFieu0MEeUKppZ6eLkrh85fFQvvkeCN75
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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
30tLLOBy2PD//4PK/gfraRXL
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
q98t8LUGyUmJU5NU/46cE2qq9TUwGBppaqf4aQxrkfnPGnz50xLxmmKPC/4s
z74aqD5q0/Kj2OCASNPdsRp4zLFqMqB4nm7qu4+TNWjqP+c+Rq2v4b/19+hz
auF98eHieIoT/xRfnreoFvdrXz/XoNixY5+dmmQtFvGXGxRR9Vtf1G1koVCL
mqn+N6B4KsVtpZdaLeQzvfjyqfqXBcwKPNCuxdM7/y1VoDjqVNRgkVEtHiTV
fbtG6Xdop3xVr0kt7OIF19VT+o7NN4pad6wWrgllCWaU/oXMOg+rM7WoKBh9
cInyR1DNsf0+nrVYJsBZe5/yj2T0NamSkFpkZQ/IvaH8RfdY/Lc/uhbrFz6K
/5//Xlgndy1IrMV0Yl5pIuXPrZJFj/fn1GK1gaCddQiJuQkS7rsKa9GsnM+n
eINEpbjbZr3SWpQ6t7YMUP62EF3RIvO9Fr6hC7/vofwvFuObtoheC9nobb3M
6yS+L2k4P8usxdTsc9o1Kj/HFwXO652pRdC5Rb6BVL4Uw382Ns+vw7ragn/s
SyQGFmimfBWtgzTheugAlc/z8/t0n6+ug/jHnoiJiySu8u9y9jCvQ+bdDvGs
8ySMApO1Tx2sQ053xFShCwl+vgm+AyfrEFHoxfhI7Q9hM08f6HnXIf0auziZ
2j/u/xaqmU2qg2ZXOK3+KIn88Vr1yNE6jNA92wd2k7jiunrq+kQdXgQygzbu
osYfvVbuwfcNO7bPEfbcTuIrU+PEgWXfoB+WXFxjSKKlPyZG1vAbzhxo7R7f
QIJsP8B9Hv4NI9k+sb2S1PiHXxIPE77B6F+F3llxavy2eRGRqd9Qs+3R3T4R
EnO+5yt5vv2GCq05qW+FKP82Stnqd3yD13PZ7pI/HKhXdBaWq9VjwNyl+dZP
DiTHz43F6NTDhJrwSAsHfBJ/Vx7dWo/iM/peWxs4aDklHc6yqYe0kEZvcTkH
frM2x6QC6/Fx2sdkyVsOanXq57j8qMewSswtdigH+XbHdbV76zGnKPW2SzB1
HgaPucyO1uNXf8RQ6zUOPjDmueyZ0wAx/3O/Ay5wEKWr1Nwl2QBDj4H0NUc5
0GmyfyK4vYG6v9zaUrKGgyynZ8S53Q1QXFmabbWKA/k/rJ8NZg3wtJRgNC/n
QEjBf8nDgw3QnBCuzhbhoNM12Xe9awN6O2WJ1zw2bixo33PofgNWbdNbOP8T
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
SxY54N4K4V///rFgmBLz//9/+T9nPl1h
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
5/PjNGyYnVRgzOITe1Y1hR11pIGMaJuXxeMTI6vPcjKcaRDVsi5fN8In0taM
6c1zo4GnmH/ZZYJPSMhLjBR70zDn1oVgX1EBQSpZWqo+pmEp6/qxtJUC4o1y
X2ZwOA0dba/UfkoLCJvNV+f0RNEg3ZLbVC4rIKq3RH6OfUnDvQ8BBpobBITf
NsVlYyk03NES7X6nJCA0NfLOm2fQ0LRAjfynIiBeaDXJzP1MQ4VRCF9CXUBY
7jjreZqgYV/I1+weTQGxcNfYj6IyGvyjJ/3uaQuIst1BCjLVNAh3XTCZsUtA
XIOE75VfNDxSWL/UREdAqO1901hHo8FAqqzSbY+A6Nmnpbb5Nw1eP15cdton
IGL1KoPuMWgQFLqt3KonIMz3W3Z0d9Og7+n5uU5fQHxetuVXVz8Nem2TD9UO
CIi1HXMKOodo1DmyTsT5oIAIfteZ2iGgwf7acykfAwHBv/4lkjlGg1ZfWa2z
oYA4YRAeyJik4eqY+tqthwREsfgFj3ZhOsrpTTPoFCt2659qE6NjgaODg5mR
gAjJWn2kdT4d92vlt6dSPHZzdHfLEjqq7Ta4tFJsa1Sz6bc4HVcjPMk+iisk
UySbpemQLTrz8RfFm3tviTWtoUNpbUNmCMUROSf+NKyn4/mixbRNFE/e2tZF
V6JDyOWmdCL1fMfD82tpqnRc+cMM4FHxfpdhFdar0/FMb424FMXqAwVpddp0
nHj6qW4VlV/Mx4joWh06IoVpZRNUPYQD3IJqdOlwq1w5+n6/gDhndtDr10E6
JrydPPZT9auTlXP8aUzHWvWI/e91BYT24F/TH2Z02LqYeo7vFRCzg96qfLOi
40mb7ehKSi/3Y3ekq+3pmDNb2WBop4BoXGs9p8qJjm9ZL4bjKL1fFyxkVbjT
4eonqf6Y6o+F93vryj3pMD1Vkv1zi4DwtCwqKrtG1bOx/VTfZgGhJ7gYW3KH
jmThOO1URQGRVmQYXHyPDsGP9ONm6wXEskfrrhY9ouPpkHY8TU5AdCrSzQsj
6YhVLft8RkpAGI6k7y14TseWt49TrooLiKzSQNX8F3S4CL0ZdFhK9bON1rzP
aXTYmN3Mq5ojIPo2Lfmbl0VHvqKFjR41L4f/9vd8/EDltzrgaZSQgFgdHlOS
W0SHtNfXxnpq3gqqpryzaHR8OedXe7eDT8g/azyT2UzHp39lhxpb+MQDx8xj
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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
7W/s/38/WPc/q7n4pg==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["x", HoldForm], TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 1}, {-1.31913046114331, 1.2372494990107428`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"ground state\"", "\"1st excitation\"", "\"2nd excitation\"", 
       "\"3rd excitation\"", "\"4th excitation\"", "\"5th excitation\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6590664765669603`*^9, 3.659066519949102*^9, 
  3.6590669303707733`*^9, 3.659927608019174*^9, 3.6608645151136017`*^9, 
  3.66207889281691*^9, 3.662179251363331*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"grd", "=", 
   RowBox[{
    RowBox[{"g", "[", "Nx", "]"}], "/", 
    SqrtBox[
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"g", "[", "Nx", "]"}], "2"], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6593228664769917`*^9, 3.659322902535652*^9}, {
   3.659322933081605*^9, 3.659322959287615*^9}, 3.659322989423965*^9, 
   3.659323033968504*^9, {3.659327080865181*^9, 3.6593270921655207`*^9}, {
   3.660864562909492*^9, 3.660864573957357*^9}, 3.660864859317457*^9, 
   3.660864932333987*^9, 3.660865225603046*^9, 3.660865366562159*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ect1", "=", 
   RowBox[{
    RowBox[{"g", "[", 
     RowBox[{"Nx", "-", "1"}], "]"}], "/", 
    SqrtBox[
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"g", "[", 
         RowBox[{"Nx", "-", "1"}], "]"}], "2"], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.660864583516913*^9, 3.660864611685224*^9}, {
   3.660864935477583*^9, 3.660864942701808*^9}, 3.660865090179964*^9, 
   3.660865223307459*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ect2", "=", 
   RowBox[{
    RowBox[{"g", "[", 
     RowBox[{"Nx", "-", "2"}], "]"}], "/", 
    SqrtBox[
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"g", "[", 
         RowBox[{"Nx", "-", "2"}], "]"}], "2"], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.660864614784986*^9, 3.66086463056491*^9}, 
   3.660864756524847*^9, 3.660865369713791*^9, 3.660865637584381*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Epsilon]", "=", 
   SuperscriptBox["10", 
    RowBox[{"-", "6"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g1", "[", "x_", "]"}], "=", "grd"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"g1", "[", "y", "]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"y", "-", "x"}], ")"}], "2"]], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", 
       RowBox[{"x", "-", "\[Epsilon]"}]}], "}"}]}], "]"}], "+", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"g1", "[", "y", "]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"y", "-", "x"}], ")"}], "2"]], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"x", "+", "\[Epsilon]"}], ",", "1"}], "}"}]}], "]"}], "-", 
   RowBox[{"2", " ", 
    FractionBox[
     RowBox[{"g1", "[", "x", "]"}], "\[Epsilon]"]}]}]}]}], "Input",
 CellChangeTimes->{{3.6621932195267677`*^9, 3.662193308664997*^9}, {
  3.662193519719761*^9, 3.662193571238151*^9}, {3.66219360570924*^9, 
  3.662193671844571*^9}, {3.662193704966365*^9, 3.662193719221651*^9}, {
  3.66219381112787*^9, 3.662193825724393*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"LHS1", "[", "x_", "]"}], "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SqrtBox["vals"], "\[Beta]"}], "//", "Sort"}], ")"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ")"}], "2"], " ", "grd"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RHS1", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["m1", "2"], "-", 
        SuperscriptBox["\[Beta]", "2"]}], "x"], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["m2", "2"], "-", 
        SuperscriptBox["\[Beta]", "2"]}], 
       RowBox[{"1", "-", "x"}]]}], ")"}], "grd"}], "-", 
   RowBox[{
    SuperscriptBox["\[Beta]", "2"], " ", 
    RowBox[{"f", "[", "x", "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.662079001562428*^9, 3.6620791224189*^9}, {
  3.66207915840313*^9, 3.6620791732350607`*^9}, {3.6620792098349047`*^9, 
  3.662079237283226*^9}, {3.6620793123462667`*^9, 3.662079315378318*^9}, {
  3.6620794410897093`*^9, 3.6620794461295233`*^9}, {3.662079884446393*^9, 
  3.662079885030048*^9}, {3.662192907085266*^9, 3.662192930571857*^9}, {
  3.662194108706918*^9, 3.6621941098016*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"LP1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"LHS1", "[", "x", "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"0", "+", 
        SuperscriptBox["10", 
         RowBox[{"-", "1"}]]}], ",", 
       RowBox[{"1", "-", 
        SuperscriptBox["10", 
         RowBox[{"-", "1"}]]}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RP1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"RHS1", "[", "x", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"1", "/", "20"}], ",", 
         RowBox[{"19", "/", "20"}], ",", 
         RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"LP1", ",", "RP1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.662194278425671*^9, 3.6621942958075743`*^9}, {
  3.6621943725781717`*^9, 3.662194419264537*^9}, {3.6621945240687304`*^9, 
  3.6621945329883842`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
xjq05i0JN693mA9gK2c4ntceIoEV/ojBwbaea21QZ5GgEBrgw8X291s/qsIh
YXW9Yvd37MyBYhHaBxKG0h7L/MWusZY2kvtIwl9DcevFFwj0rjp57/LPeD8y
Xm0Xxv6j8iNl2RQJIV/ebJTAVsvyqxb9ju+P0pmTwt76Z4gh9IsEW/sNOTLY
wYF2iwX+kPDrfoegLPbzIO8VCYsoeNKp6/yfmStXrInjpeB6u2PYCuwvw32W
MfwUODic91uOzZOd4npSgAIx15GNktjS2+gBJ5ZQYDh/jxLF1lw0Fxu1lAKb
sKaDS7CN66ovRopQUCCo+pQH2y4k8M5RMQrceOQF5/D9eWuoN4dJUPCB95PO
FHYok9l/RJICkGrUG8dOupgzFixNQdu64zQm9mVbx/lAGQoa3Run+rDv8AhK
BMhSYNtfUtGO3VTfqu4nTwFrZMTlITalud7xoBIFJk3aXpewp1kf9+9XoSCw
tLs5EXtxTnGUjxoFIkM8i0OxV/FJF3lqUnBzbRVswTZr7HnkoU3BMc7w2vXY
28OSu91WURArbPFbDjuCnP3mspaCMp7DOhP/5ePlyiU79ShI8WhJ7sXOd/Cj
OevjeKxKGqqwW5qGbByMKBjyci85hi2U9zh/swUF4w+Cb03j85NmHj8bYkkB
vb666gX20lGrnXkE/n3WsaCb2CJrX4hM2lDQ0frmuyO22JOhuPPbcTxltdmX
8XnN9L/KbHCmYHVYgo0vtrj4vk2jOymoXHqgSh9bwmNi2tCNgrHmF7ee43og
+XXWl+GD92+HYMM4rifZOY3t/AcoOG7UMlKOLWUaq7zWlwLZwYoHIdjSZxYP
xftTkMO7zOgrrkcrFKXtNcPxfow//zWC65ni1vX6YUkU+OQO+aTielj4eSaz
IJmC96nb/Iz/q48X6yc7zlJwPz5Wa+wMgZTYcFsmg4Jl37Z2mmOrRjjKPr5E
QUVHiQHrNM6nG4F/BUooKLcKcmMk4Hqxed0evTsU6EZflYrE1pqcrnO/S8H6
V7viRLG1jaLD7lVQcK+p9KhJPIFW96S8d66joPpVu0ByLIH0ft7uLuyiQKVa
OZwZjfNP7fO6om4KWtVjKvyxM+wNcm73UGCd9rn5+wkCTdxo31vxioKYqZUu
S7FvbCNnWt9R4HtNPVQjCq/nFVnl0QkKLHOLJTRw//pqnn5UR4gDfTO3r9vj
fqjk9887XWEOUB+iiEf+uN9ny1noi3JA2K6rVRH7zljpEtNlHAjJDNs5cRj3
56wnV+3lOOChsl8pHPfbV9SfZ0d0OCBq3TnrhPtzZVKoYu02DhgM/7ExcMX/
V9j+/IMdB27KKmj643lg4qF01HJHDpyeaWwpxPODylh9f8QODii0RCst2oHn
ha08Zzfs4YBn55qTdY74vIlmTz0I4kD/qrniMTx/6OXWPC3P4kDuWUGjrXi+
6alcHMG4wIGMmf6AncYE8uvarSp8iQMtn/0dvTbi9fg1fzIgjwNivedlgw3x
enhar9cp4oDag7z8U+vxeqi8vVJSzQEJsbJMTx0CVd2dDS16y4HiFB0hbVkC
jS2/NfZ0kAPOe3ZSYitwfU5w9uQOcSCYp+HYzHICJe6+t2UjmwMn6n9zm6QI
5MK/X6l3jAMTmRbbzcRxf/LqffHzBwfcm7Z18AkQyGTZLU0n+RH4Nycm7fY0
HXVEOTP/eo9A2++Co3ZddHTrcKLHgs8IcLyUdP48paMzu2veLewfAdsaZt/9
Tjqy3bj87aLDI3BZ9sWkcAcdvZp918t7ZAQ2aV3a1dRMR+xIn1aBuBHQ2uZo
P1FNRz+PHikWuz4C46K7PRLw/Kwbes5PiRyB5hHNc3eD6EiOP/mHeMAo3Ez8
KxfzwxJ5dXiVdkyOgrX/0DXnaEtUrS0c8jHgPeyqER0oHwWUqhOxkTPzHoze
25bJXbdA9a4tqlciP4DKZZMfOm7myJ/2REyLZwxGn0lFnmWbonCJcsXIpDGQ
joA28UATlFF2iG7INw5ZO0u9ZL8aI202y+/ZuXE4Y3L3+rMtG5GihVGVgvgE
0JZ/SY+uNkTZm2x/069MwAmhU4trZjYgOYa+97D6R1ALeXBo1lQf/Sz9TRnc
/gjCZZH8hkV6yF0i8dA+vU9wIKMwVKZPF0nemhBxqv4EwV+6FuvfXIUYrJXd
D9ZPwpov5KbgPC2kVSOfNto0CZWy8mPKB9XRi5rpgHdmXFDufRjml6iKLons
NpMFLjyKe7aqJ1IVefs2ibrRucBn1Rmm76+KvsqcfjC4mQvH73aGCzqpIuno
5bMDjlwYzRjSe0NTRV6WxglvffDnP5qNhhtU0L89Mbn/nObC/O18Zvq4MqrX
GPGTPMuF7OMaE99eKqPEWBuTHanYljus9tfi5089cVb/OS6ckDlo7ZysjIwv
3lDrv8wFpyjCOWilMkpw77jfd4cLSuSS+DgfJWRbrRUnXo6/z5DPNNuqhKSF
M5y23+fCkF5s1cI6JVTy2OXbyyouOPRqGl9eoKFu5THjl41cKEwXUv95jYYu
HrddKtaM49PwNGWcoSHP/gqGQysXMrN2be8IoaEviVGxvR1cOHxPoOmWBQ3V
MRjbRZ9yodm9buGaJg3FG1iqOnRxYbJAevK6GA3Znrs1ndHNhbRlDXtLZxWR
1NiSJz09XChZ+//n9/8B55XsAg==
      "]]}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQPWsmCKy0N/gtbZ62jOsAhL/T/s+xhy+n35U5YAwG
h+13Tq9cw9inDpU/aV/lNGf9wWMGBxjA4IJ98uy69HkPTaHqL9trMoqbau63
OpAGBtfs9RzX5CQy2EP137QXMFAyt9ZwPHD2DAjcsa/sa+Y3MXWCmvfA3rbs
TnDGRCeo+of2F2a8ijEEykPMf2y/2/rDPVu4/if2WiGbzqUBzYfY98xeV1b9
kgrQfoh5L+wTDu06sgjoPoh5L+0fJ6zU2w90P8S81/Ziy5c4swL9BzHvjf2M
P831c4D+h5j3zn4L04mbScDwAQD+yY8P
       "]]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.2, -38.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->NCache[{{
      Rational[1, 10], 
      Rational[9, 10]}, {-37.133554599141945`, -7.217487365999868}}, {{0.1, 
    0.9}, {-37.133554599141945`, -7.217487365999868}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.662194387515555*^9, 3.6621944056179953`*^9}, 
   3.662194536056725*^9, 3.662194595771397*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g2", "[", "x_", "]"}], "=", "ect1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"g2", "[", "y", "]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"y", "-", "x"}], ")"}], "2"]], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", 
       RowBox[{"x", "-", "\[Epsilon]"}]}], "}"}]}], "]"}], "+", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"g2", "[", "y", "]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"y", "-", "x"}], ")"}], "2"]], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"x", "+", "\[Epsilon]"}], ",", "1"}], "}"}]}], "]"}], "-", 
   RowBox[{"2", " ", 
    FractionBox[
     RowBox[{"g2", "[", "x", "]"}], 
     "\[Epsilon]"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LHS2", "[", "x_", "]"}], "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SqrtBox["vals"], "\[Beta]"}], "//", "Sort"}], ")"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], ")"}], "2"], " ", "ect1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RHS2", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["m1", "2"], "-", 
        SuperscriptBox["\[Beta]", "2"]}], "x"], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["m2", "2"], "-", 
        SuperscriptBox["\[Beta]", "2"]}], 
       RowBox[{"1", "-", "x"}]]}], ")"}], "ect1"}], "-", 
   RowBox[{
    SuperscriptBox["\[Beta]", "2"], " ", 
    RowBox[{"f2", "[", "x", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LP2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"LHS2", "[", "x", "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"0", "+", 
        SuperscriptBox["10", 
         RowBox[{"-", "1"}]]}], ",", 
       RowBox[{"1", "-", 
        SuperscriptBox["10", 
         RowBox[{"-", "1"}]]}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RP2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"RHS2", "[", "x", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"1", "/", "20"}], ",", 
         RowBox[{"19", "/", "20"}], ",", 
         RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"LP2", ",", "RP2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.662079474721732*^9, 3.6620795095446243`*^9}, {
  3.662079767288875*^9, 3.6620797694799557`*^9}, {3.6620798928555326`*^9, 
  3.6620798934469347`*^9}, {3.6621941146219893`*^9, 3.662194115532833*^9}, {
  3.6621944429576883`*^9, 3.66219446005247*^9}, {3.662194542077203*^9, 
  3.662194545413522*^9}, {3.662194736834972*^9, 3.662194786828781*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      
      "]]}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQPWsmCKy0f7gn9X6Gk4IDhL/T/uYjRbnLJsYOxmBw
2L7Md+vsa2IOUPmT9h8m5XkYBLk5MIDBBfslKbeYd93zgqq/bG+ws/FGd5mP
QxoYXLOf/I5lw3QPL6j+m/bXOPy01KxcHM6eAYE79qd2KqZsZjSDmvfAftY1
9UcRnDL7IOof2r/Z7RK0kdHsAMT8x/axbMzqGlYuByD6n9invSydOsvD6wDE
vmf2nEfFH3WU+RyAmPfCXiGjK2vvPa8DEPNe2t+YpKutF+QGNe+1vV+QutYN
MQeoeW/shf+f471qYgw175399oflE9OdFA4AABKMiWE=
       "]]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.2, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->NCache[{{
      Rational[1, 10], 
      Rational[9, 10]}, {-56.94164939141774, 56.941646048023436`}}, {{0.1, 
    0.9}, {-56.94164939141774, 56.941646048023436`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.662079513204937*^9, 3.662079772304048*^9, 
  3.662079896324936*^9, 3.6621792732005997`*^9, 3.662194656420578*^9, 
  3.6621947836596117`*^9, 3.662194848018223*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"g1", "[", "y", "]"}], "-", 
      RowBox[{"g1", "[", "x", "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"y", "-", "x"}], ")"}], "2"]], "/.", 
    RowBox[{"x", "\[Rule]", "0.5"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AccuracyGoal", "\[Rule]", "10"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662193359165061*^9, 3.662193363206285*^9}, {
  3.662194498036467*^9, 3.662194510827915*^9}}],

Cell[BoxData["9.751477945249489`"], "Output",
 CellChangeTimes->{3.662193369153371*^9, 3.6621946618064537`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"g1", "[", "y", "]"}], "-", 
     RowBox[{"g1", "[", "0.5", "]"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"y", "-", "0.5"}], ")"}], "2"]], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "0.5", ",", "1"}], "}"}], ",", 
   RowBox[{"AccuracyGoal", "\[Rule]", "10"}], ",", 
   RowBox[{"Method", "\[Rule]", "PrincipalValue"}]}], "]"}]], "Input",
 CellChangeTimes->{3.662194830962224*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(y\\)\
\[NoBreak] near \[NoBreak]\\!\\({y}\\)\[NoBreak] = \
\[NoBreak]\\!\\({3.9131611356658176`*^-58}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(4.579416699358141`*^99\\)\[NoBreak] and \
\[NoBreak]\\!\\(4.626573084855552`*^99\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66219486362004*^9}],

Cell[BoxData["4.579416699358141`*^99"], "Output",
 CellChangeTimes->{3.6621948636915693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"g1", "[", "y", "]"}], "-", 
     RowBox[{"g1", "[", "0.5", "]"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y", "-", "0.5"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"g1", "[", "x", "]"}], ",", "x"}], "]"}], "/.", 
        RowBox[{"x", "\[Rule]", "0.5"}]}], ")"}]}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"y", "-", "0.5"}], ")"}], "2"]], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "0.5", ",", "1"}], "}"}], ",", 
   RowBox[{"AccuracyGoal", "\[Rule]", "10"}], ",", 
   RowBox[{"Method", "\[Rule]", "PrincipalValue"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662193373286759*^9, 3.662193435942396*^9}, {
  3.662193903684663*^9, 3.662193926395286*^9}, {3.662193958020895*^9, 
  3.662194010569909*^9}, {3.662194062618108*^9, 3.662194087610551*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(y\\)\
\[NoBreak] near \[NoBreak]\\!\\({y}\\)\[NoBreak] = \
\[NoBreak]\\!\\({3.9131611356658176`*^-58}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(4.579416699358141`*^99\\)\[NoBreak] and \
\[NoBreak]\\!\\(4.626573084855552`*^99\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662194026839566*^9, 3.6621941036775007`*^9}],

Cell[BoxData["4.579416699358141`*^99"], "Output",
 CellChangeTimes->{
  3.66219339082368*^9, {3.662193430306505*^9, 3.662193452044477*^9}, {
   3.662193942716115*^9, 3.662194026887246*^9}, 3.662194103686738*^9}]
}, Open  ]]
},
WindowSize->{1855, 1056},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.1 for Linux x86 (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 320, 8, 37, "Input"],
Cell[881, 30, 1052, 34, 56, "Input"],
Cell[1936, 66, 342, 8, 37, "Input"],
Cell[2281, 76, 3831, 71, 152, "Input"],
Cell[6115, 149, 232, 5, 37, "Input"],
Cell[6350, 156, 2009, 43, 44, "Input"],
Cell[8362, 201, 2084, 58, 147, "Input"],
Cell[10449, 261, 1090, 21, 37, "Input"],
Cell[11542, 284, 179, 4, 37, "Input"],
Cell[11724, 290, 415, 10, 37, "Input"],
Cell[12142, 302, 370, 8, 37, "Input"],
Cell[CellGroupData[{
Cell[12537, 314, 1194, 21, 52, "Input"],
Cell[13734, 337, 2369, 35, 37, "Output"]
}, Open  ]],
Cell[16118, 375, 359, 7, 37, "Input"],
Cell[16480, 384, 731, 21, 37, "Input"],
Cell[CellGroupData[{
Cell[17236, 409, 1008, 26, 62, "Input"],
Cell[18247, 437, 99965, 1754, 260, "Output"]
}, Open  ]],
Cell[118227, 2194, 695, 17, 72, "Input"],
Cell[118925, 2213, 560, 17, 72, "Input"],
Cell[119488, 2232, 531, 16, 72, "Input"],
Cell[120022, 2250, 1295, 37, 121, "Input"],
Cell[121320, 2289, 1298, 37, 114, "Input"],
Cell[CellGroupData[{
Cell[122643, 2330, 1225, 36, 93, "Input"],
Cell[123871, 2368, 6812, 125, 298, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130720, 2498, 3233, 100, 282, "Input"],
Cell[133956, 2600, 10643, 188, 287, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144636, 2793, 567, 16, 67, "Input"],
Cell[145206, 2811, 111, 1, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145354, 2817, 503, 14, 67, "Input"],
Cell[145860, 2833, 807, 15, 60, "Message"],
Cell[146670, 2850, 93, 1, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146800, 2856, 953, 25, 67, "Input"],
Cell[147756, 2883, 832, 15, 60, "Message"],
Cell[148591, 2900, 211, 3, 39, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
